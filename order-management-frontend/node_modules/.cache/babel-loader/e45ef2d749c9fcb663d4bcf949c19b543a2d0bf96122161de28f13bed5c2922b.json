{"ast":null,"code":"// File: src/services/api.js\nimport axios from 'axios';\nconst API = axios.create({\n  baseURL: 'http://localhost:5045/api'\n});\nexport const fetchOrders = () => API.get('/orders');\nexport const createOrder = async order => {\n  try {\n    const response = await API.post('/orders', {\n      creator: order.creator,\n      responsible: order.responsible,\n      company: order.company\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error creating order:', error.message);\n    throw error;\n  }\n};\nexport const fetchOrder = orderId => API.get(`/orders/${orderId}`);\nexport const fetchLineItems = orderId => API.get(`/lineitems/${orderId}`);\nexport const fetchProcesses = async () => {\n  try {\n    const response = await API.get('/processes');\n    console.log('Processes API response:', response.data); // Log response\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching shapes from API:', error.message);\n    throw error;\n  }\n};\nexport const fetchVendors = async () => {\n  try {\n    const response = await API.get('/vendors');\n    console.log('Vendors API response:', response.data); // Log response\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching shapes from API:', error.message);\n    throw error;\n  }\n};\nexport const fetchShapes = async () => {\n  try {\n    const response = await API.get('/shapes');\n    console.log('Shapes API response:', response.data); // Log response\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching shapes from API:', error.message);\n    throw error;\n  }\n};\nexport const fetchGrades = async () => {\n  try {\n    const response = await API.get('/grades');\n    console.log('Grades API response:', response.data); // Log response\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching shapes from API:', error.message);\n    throw error;\n  }\n};\nexport const createVendor = vendor => API.post('/vendors', vendor);\nexport const createProcess = process => API.post('/processes', process);\nexport const createShape = shape => API.post('/shapes', shape);\nexport const createGrade = grade => API.post('/grades', grade);\nrouter.post('/lineitems', async (req, res) => {\n  try {\n    const newLineItem = new LineItem(req.body);\n    await newLineItem.save();\n    res.status(201).json(newLineItem); // Return the created line item\n  } catch (error) {\n    console.error('Error creating line item:', error.message);\n    res.status(500).json({\n      message: 'Failed to create line item'\n    });\n  }\n});\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","fetchOrders","get","createOrder","order","response","post","creator","responsible","company","data","error","console","message","fetchOrder","orderId","fetchLineItems","fetchProcesses","log","fetchVendors","fetchShapes","fetchGrades","createVendor","vendor","createProcess","process","createShape","shape","createGrade","grade","router","req","res","newLineItem","LineItem","body","save","status","json"],"sources":["/Users/nshah/GPT Project/order-management-frontend/src/services/api.js"],"sourcesContent":["// File: src/services/api.js\nimport axios from 'axios';\n\nconst API = axios.create({\n  baseURL: 'http://localhost:5045/api',\n});\n\nexport const fetchOrders = () => API.get('/orders');\nexport const createOrder = async (order) => {\n  try {\n    const response = await API.post('/orders', {\n      creator: order.creator,\n      responsible: order.responsible,\n      company: order.company,\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error creating order:', error.message);\n    throw error;\n  }\n};\nexport const fetchOrder = (orderId) => API.get(`/orders/${orderId}`);\nexport const fetchLineItems = (orderId) => API.get(`/lineitems/${orderId}`);\n\nexport const fetchProcesses = async () => {\n  try {\n    const response = await API.get('/processes');\n    console.log('Processes API response:', response.data); // Log response\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching shapes from API:', error.message);\n    throw error;\n  }\n};\nexport const fetchVendors = async () => {\n  try {\n    const response = await API.get('/vendors');\n    console.log('Vendors API response:', response.data); // Log response\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching shapes from API:', error.message);\n    throw error;\n  }\n};\nexport const fetchShapes = async () => {\n  try {\n    const response = await API.get('/shapes');\n    console.log('Shapes API response:', response.data); // Log response\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching shapes from API:', error.message);\n    throw error;\n  }\n};\n\nexport const fetchGrades = async () => {\n  try {\n    const response = await API.get('/grades');\n    console.log('Grades API response:', response.data); // Log response\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching shapes from API:', error.message);\n    throw error;\n  }\n};\nexport const createVendor = (vendor) => API.post('/vendors', vendor);\nexport const createProcess = (process) => API.post('/processes', process);\nexport const createShape = (shape) => API.post('/shapes', shape);\nexport const createGrade = (grade) => API.post('/grades', grade);\nrouter.post('/lineitems', async (req, res) => {\n  try {\n    const newLineItem = new LineItem(req.body);\n    await newLineItem.save();\n    res.status(201).json(newLineItem); // Return the created line item\n  } catch (error) {\n    console.error('Error creating line item:', error.message);\n    res.status(500).json({ message: 'Failed to create line item' });\n  }\n});\n\nexport default API;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}