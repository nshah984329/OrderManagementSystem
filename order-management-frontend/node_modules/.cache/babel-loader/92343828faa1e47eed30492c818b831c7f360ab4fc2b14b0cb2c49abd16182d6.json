{"ast":null,"code":"import _objectSpread from\"/Users/nshah/GPT Project/order-management-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{useParams,Link}from'react-router-dom';import Select from'react-select';import axios from'axios';import{useCallback}from'react';import{fetchOrder,fetchLineItems,fetchProcesses,fetchVendors,fetchShapes,fetchGrades,createLineItem,editLineitem,deleteLineItem}from'../services/api';import EditPopup from'./EditPopup';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const OrderDetails=()=>{const{id}=useParams();const[order,setOrder]=useState(null);const[lineItems,setLineItems]=useState([]);const[fetchedLineItems,setfetchedLineItems]=useState([]);const[nextLineItemId,setNextLineItemId]=useState('');// Next available lineItemId\nconst[processes,setProcesses]=useState([]);const[vendors,setVendors]=useState([]);const[shapes,setShapes]=useState([]);const[grades,setGrades]=useState([]);const allPossibleDimensions=['length','breadth','thickness','diameter'];const shapeDimensionMap={'Sheet':['length','breadth','thickness'],'round bar':['diameter','length'],'square bar':['thickness','length'],'hexagon bar':['thickness','length'],'flat bar':['length','breadth','thickness']};const[newLineItem,setNewLineItem]=useState({shape:'',grade:'',dimensions:{length:'',breadth:'',thickness:'',diameter:''},quantity:'',weight:'',processIds:[],vendorIds:[]});const[density,setDensity]=useState(0);const[message,setMessage]=useState('');useEffect(()=>{const loadOrderData=async()=>{try{const orderData=await fetchOrder(id);console.log('Fetched Order:',orderData);setOrder(orderData);const lineItemData=await fetchLineItems(id);console.log('Fetched Line Items:',lineItemData);setLineItems(lineItemData);setfetchedLineItems(lineItemData.data);const{data}=await axios.get(\"http://localhost:5045/api/lineitems/nextLineItemId/\".concat(id));setNextLineItemId(data.nextLineItemId);}catch(err){console.error('Error fetching data:',err.message);setMessage('Failed to load data.');}};loadOrderData();},[id]);const fetchShapesOnClick=async()=>{if(shapes.length>0)return;try{const shapeData=await fetchShapes();setShapes(shapeData);}catch(err){console.error('Error fetching shapes:',err.message);}};const fetchGradesOnClick=async()=>{if(grades.length>0)return;try{const gradeData=await fetchGrades();setGrades(gradeData);}catch(err){console.error('Error fetching grades:',err.message);}};const fetchVendorsOnClick=async()=>{if(vendors.length>0)return;try{const vendorData=await fetchVendors();setVendors(vendorData);}catch(err){console.error('Error fetching vendors:',err.message);}};const fetchProcessesOnClick=async()=>{if(processes.length>0)return;try{const processData=await fetchProcesses();setProcesses(processData);}catch(err){console.error('Error fetching processes:',err.message);}};const fetchLineItemsForOrder=async()=>{try{const lineItemData=await fetchLineItems(order.orderId);setfetchedLineItems(lineItemData.data);console.log(\"fetched Lineitems Again: \",fetchedLineItems);}catch(err){console.error('Error fetching updated line items:',err.message);}};const handleSubmit=async e=>{e.preventDefault();// Validate and log the dimensions\nconst{dimensions}=newLineItem;console.log('Submitting Dimensions:',dimensions);const updatedDimensions={};allPossibleDimensions.forEach(dimension=>{updatedDimensions[dimension]=dimensions[dimension]||null;});// Check if all dimensions are numbers or null\nconst allValid=Object.values(updatedDimensions).every(value=>value===null||typeof value==='number');if(!allValid){console.error('Invalid dimensions:',updatedDimensions);setMessage('Please provide valid numeric dimensions.');return;}console.log('Submitting Line Item:',_objectSpread(_objectSpread({},newLineItem),{},{orderId:id,lineItemId:nextLineItemId,dimensions:updatedDimensions}));try{const response=await createLineItem(_objectSpread(_objectSpread({},newLineItem),{},{orderId:id,lineItemId:nextLineItemId,dimensions:updatedDimensions}));console.log('Line Item Created:',response);setMessage('Line item added successfully!');fetchLineItemsForOrder();setLineItems(prev=>Array.isArray(prev)?[...prev,response]:[response]);setNewLineItem({shape:'',grade:'',dimensions:{length:updatedDimensions.length,breadth:updatedDimensions.breadth,thickness:updatedDimensions.thickness,diameter:updatedDimensions.diameter},quantity:'',weight:'',processIds:[],vendorIds:[]});const lineItemData=await fetchLineItems(id);setLineItems(lineItemData);// Fetch next lineItemId for subsequent additions\nconst{data}=await axios.get(\"http://localhost:5045/api/lineitems/nextLineItemId/\".concat(id));setNextLineItemId(data.nextLineItemId);}catch(err){var _err$response;console.error('Failed to add line item:',((_err$response=err.response)===null||_err$response===void 0?void 0:_err$response.data)||err.message);setMessage('Failed to add line item.');}};const calculateWeight=useCallback(()=>{const{shape,dimensions,quantity}=newLineItem;const{length,breadth,thickness,diameter}=dimensions;if(!shape||!density||!quantity||quantity<=0){return{totalWeight:'',weightPerUnit:''};// Return empty if missing key data\n}let volume=0;if(shape==='round bar'){if(diameter&&length){volume=Math.PI*Math.pow(diameter/2,2)*length;// Volume of a cylinder\n}}else if(shape==='Sheet'||shape==='flat bar'){if(length&&breadth&&thickness){volume=length*breadth*thickness;// Volume of a rectangular block\n}}else if(shape==='square bar'){if(thickness&&length){volume=Math.pow(thickness,2)*length;// Volume of a square cross-section bar\n}}else if(shape==='hexagon bar'){if(thickness&&length){const area=3*Math.sqrt(3)*Math.pow(thickness/2,2)/2;// Area of hexagon\nvolume=area*length;// Volume of hexagonal prism\n}}const totalWeight=volume*density*quantity*0.000001;// Multiply by quantity\nconst weightPerUnit=totalWeight/quantity;// Divide totalWeight by quantity\nreturn{totalWeight:isNaN(totalWeight)?'':totalWeight.toFixed(2),weightPerUnit:isNaN(weightPerUnit)?'':weightPerUnit.toFixed(2)};},[newLineItem,density]);// Dependencies for useCallback\nconst fetchDensity=async selectedGrade=>{const grade=grades.find(g=>g.grade===selectedGrade);return grade?grade.density:0;// Return 0 if no matching grade\n};const handleDropdownChange=async e=>{const{name,value}=e.target;if(name==='grade'){const fetchedDensity=await fetchDensity(value);setDensity(fetchedDensity);setNewLineItem(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));}else{setNewLineItem(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));}};const[editingLineItem,setEditingLineItem]=useState(null);// Line item to edit\nconst[isEditPopupOpen,setIsEditPopupOpen]=useState(false);// Whether popup is open\nconst handleEditLineItem=item=>{setEditingLineItem(item);// Set the line item being edited\nsetIsEditPopupOpen(true);// Open the popup\n};const handleDeleteLineItem=async lineItemId=>{try{// Confirm deletion\nif(!window.confirm('Are you sure you want to delete this line item?')){return;// Exit if user cancels\n}// Call the delete API\nconst response=await deleteLineItem(encodeURIComponent(lineItemId));console.log('Line Item Deleted:',response.data);// Refresh the list of line items after deletion\nawait fetchLineItemsForOrder();// Show success message\nsetMessage(\"\\u2705 Line item \".concat(lineItemId,\" deleted successfully!\"));}catch(err){var _err$response2;console.error('❌ Error deleting line item:',((_err$response2=err.response)===null||_err$response2===void 0?void 0:_err$response2.data)||err.message);setMessage('❌ Failed to delete line item.');}};const handleUpdateLineItem=async updatedLineItem=>{try{console.log('Update button clicked:',updatedLineItem);// Validate data\nif(!Array.isArray(updatedLineItem.processIds)||!Array.isArray(updatedLineItem.vendorIds)){throw new Error('processIds and vendorIds must be arrays.');}console.log('processIds:',updatedLineItem.processIds);console.log('vendorIds:',updatedLineItem.vendorIds);// Encode the lineItemId once\nconst encodedLineItemId=encodeURIComponent(updatedLineItem.lineItemId);console.log('Encoded Line Item ID:',encodedLineItemId);const response=await editLineitem(encodedLineItemId,{processIds:updatedLineItem.processIds,vendorIds:updatedLineItem.vendorIds},{headers:{'Content-Type':'application/json'}});console.log('Updated Line Item:',response.data);// Refresh the line items\nfetchLineItemsForOrder();setIsEditPopupOpen(false);// Close the popup\n}catch(err){var _err$response3;console.error('Error updating line item:',((_err$response3=err.response)===null||_err$response3===void 0?void 0:_err$response3.data)||err.message);}};useEffect(()=>{console.log('Shape:',newLineItem.shape);console.log('Grade:',newLineItem.grade);console.log('Dimensions:',newLineItem.dimensions);console.log('Density:',density);if(newLineItem.shape||newLineItem.grade||Object.values(newLineItem.dimensions).some(val=>val)){setNewLineItem(prev=>_objectSpread(_objectSpread({},prev),{},{weight:calculateWeight()}));}},[newLineItem.shape,newLineItem.grade,newLineItem.dimensions]);useEffect(()=>{const{totalWeight,weightPerUnit}=calculateWeight();setNewLineItem(prev=>_objectSpread(_objectSpread({},prev),{},{weight:totalWeight,// Update total weight in the state\nweightPerUnit// Update weight per unit in the state\n}));},[newLineItem.shape,newLineItem.dimensions,newLineItem.quantity,density,calculateWeight]);useEffect(()=>{console.log('Updated fetchedLineItems:',fetchedLineItems.data);console.log('Fetched Line Items:',fetchedLineItems);console.log('Is Array:',Array.isArray(fetchedLineItems));console.log('Length:',fetchedLineItems);},[fetchedLineItems]);// This will log whenever `fetchedLineItems` changes\nconst handleShapeChange=e=>{const selectedShape=e.target.value;setNewLineItem(prev=>_objectSpread(_objectSpread({},prev),{},{shape:selectedShape,dimensions:{length:'',breadth:'',thickness:'',diameter:''},// Reset dimensions\nweight:''// Clear weight\n}));};const renderDimensionFields=()=>{const selectedShape=newLineItem.shape;const dimensionsToRender=shapeDimensionMap[selectedShape]||[];return/*#__PURE__*/_jsx(\"div\",{className:\"textbox-container\",children:dimensionsToRender.map(dimension=>/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:dimension,placeholder:dimension.charAt(0).toUpperCase()+dimension.slice(1),value:newLineItem.dimensions[dimension]||'',onChange:e=>setNewLineItem(prev=>_objectSpread(_objectSpread({},prev),{},{dimensions:_objectSpread(_objectSpread({},prev.dimensions),{},{[dimension]:parseFloat(e.target.value)||null})})),required:true},dimension))});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Order Details\"}),order&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Order ID: \",order.orderId]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Creator: \",order.creator]})]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Add New Line Item\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"lineItemId\",children:\"Next Line Item ID:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"lineItemId\",value:nextLineItemId,readOnly:true})]}),/*#__PURE__*/_jsxs(\"select\",{name:\"shape\",value:newLineItem.shape,onChange:handleShapeChange,onClick:fetchShapesOnClick,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Shape\"}),Array.isArray(shapes)&&shapes.length>0?shapes.map(shape=>/*#__PURE__*/_jsx(\"option\",{value:shape.shapeId,children:shape.shapeId},shape._id)):/*#__PURE__*/_jsx(\"option\",{disabled:true,children:\"No shapes available\"})]}),/*#__PURE__*/_jsxs(\"select\",{name:\"grade\",value:newLineItem.grade,onChange:handleDropdownChange,onClick:fetchGradesOnClick,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Grade\"}),Array.isArray(grades)&&grades.length>0?grades.map(grade=>/*#__PURE__*/_jsx(\"option\",{value:grade.grade,children:grade.grade},grade._id)):/*#__PURE__*/_jsx(\"option\",{disabled:true,children:\"No grades available\"})]}),renderDimensionFields(),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Quantity\",value:newLineItem.quantity,onChange:e=>setNewLineItem(prev=>_objectSpread(_objectSpread({},prev),{},{quantity:e.target.value})),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"hidden\",placeholder:\"Weight\",value:newLineItem.weight// Dynamically updated weight\n,readOnly:true,required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Total Weight\",value:newLineItem.weight||''// Dynamically updated weight\n,readOnly:true,required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Weight Per Unit\",value:newLineItem.weightPerUnit||''// Dynamically updated weight per unit\n,readOnly:true}),/*#__PURE__*/_jsxs(\"select\",{name:\"processIds\",value:newLineItem.processIds[0]||'',onChange:e=>setNewLineItem(prev=>_objectSpread(_objectSpread({},prev),{},{processIds:[e.target.value]// Set the first selected process\n})),onClick:fetchProcessesOnClick,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Process\"}),Array.isArray(processes)&&processes.length>0?processes.map(process=>/*#__PURE__*/_jsx(\"option\",{value:process.processId,children:process.processId},process._id)):/*#__PURE__*/_jsx(\"option\",{disabled:true,children:\"No processes available\"})]}),/*#__PURE__*/_jsxs(\"select\",{name:\"vendorIds\",value:newLineItem.vendorIds[0]||'',onChange:e=>setNewLineItem(prev=>_objectSpread(_objectSpread({},prev),{},{vendorIds:[e.target.value]// Set the first selected vendor\n})),onClick:fetchVendorsOnClick,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Vendor\"}),Array.isArray(vendors)&&vendors.length>0?vendors.map(vendor=>/*#__PURE__*/_jsx(\"option\",{value:vendor.vendorId,children:vendor.vendorId},vendor._id)):/*#__PURE__*/_jsx(\"option\",{disabled:true,children:\"No vendors available\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Add Line Item\"})]}),message&&/*#__PURE__*/_jsx(\"p\",{children:message}),/*#__PURE__*/_jsx(\"h2\",{children:\"Existing Line Items\"}),fetchedLineItems.length>0?/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Line Item ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Shape\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Grade\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Dimensions\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Quantity\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Weight\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Processes\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Vendors\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:fetchedLineItems.map((item,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:item.lineItemId||'Unknown'}),/*#__PURE__*/_jsx(\"td\",{children:item.shape||'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:item.grade||'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:item.dimensions?Object.entries(item.dimensions).filter(_ref=>{let[_,value]=_ref;return value&&value!=='N/A';})// Filter out keys with N/A or empty values\n.map(_ref2=>{let[key,value]=_ref2;return\"\".concat(key,\": \").concat(value);}).join(', '):'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:item.quantity||'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:item.weight||'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:Array.isArray(item.processIds)?item.processIds.join(', ')// Show all selected processIds\n:'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:Array.isArray(item.vendorIds)?item.vendorIds.join(', ')// Show all selected vendorIds\n:'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleEditLineItem(item),children:\"Edit\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDeleteLineItem(item.lineItemId),children:\"Delete\"})})]},index))})]}):/*#__PURE__*/_jsx(\"p\",{children:\"No line items available\"}),isEditPopupOpen&&editingLineItem&&/*#__PURE__*/_jsx(EditPopup,{lineItem:editingLineItem,onClose:()=>setIsEditPopupOpen(false),onSave:updatedLineItem=>{console.log('Save clicked with:',updatedLineItem);handleUpdateLineItem(updatedLineItem);// Update the line item\n}})]});};export default OrderDetails;","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","Select","axios","useCallback","fetchOrder","fetchLineItems","fetchProcesses","fetchVendors","fetchShapes","fetchGrades","createLineItem","editLineitem","deleteLineItem","EditPopup","jsx","_jsx","jsxs","_jsxs","OrderDetails","id","order","setOrder","lineItems","setLineItems","fetchedLineItems","setfetchedLineItems","nextLineItemId","setNextLineItemId","processes","setProcesses","vendors","setVendors","shapes","setShapes","grades","setGrades","allPossibleDimensions","shapeDimensionMap","newLineItem","setNewLineItem","shape","grade","dimensions","length","breadth","thickness","diameter","quantity","weight","processIds","vendorIds","density","setDensity","message","setMessage","loadOrderData","orderData","console","log","lineItemData","data","get","concat","err","error","fetchShapesOnClick","shapeData","fetchGradesOnClick","gradeData","fetchVendorsOnClick","vendorData","fetchProcessesOnClick","processData","fetchLineItemsForOrder","orderId","handleSubmit","e","preventDefault","updatedDimensions","forEach","dimension","allValid","Object","values","every","value","_objectSpread","lineItemId","response","prev","Array","isArray","_err$response","calculateWeight","totalWeight","weightPerUnit","volume","Math","PI","pow","area","sqrt","isNaN","toFixed","fetchDensity","selectedGrade","find","g","handleDropdownChange","name","target","fetchedDensity","editingLineItem","setEditingLineItem","isEditPopupOpen","setIsEditPopupOpen","handleEditLineItem","item","handleDeleteLineItem","window","confirm","encodeURIComponent","_err$response2","handleUpdateLineItem","updatedLineItem","Error","encodedLineItemId","headers","_err$response3","some","val","handleShapeChange","selectedShape","renderDimensionFields","dimensionsToRender","className","children","map","type","placeholder","charAt","toUpperCase","slice","onChange","parseFloat","required","creator","onSubmit","htmlFor","readOnly","onClick","shapeId","_id","disabled","process","processId","vendor","vendorId","index","entries","filter","_ref","_","_ref2","key","join","lineItem","onClose","onSave"],"sources":["/Users/nshah/GPT Project/order-management-frontend/src/pages/OrderDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport Select from 'react-select';\nimport axios from 'axios';\nimport { useCallback } from 'react';\nimport {\n  fetchOrder,\n  fetchLineItems,\n  fetchProcesses,\n  fetchVendors,\n  fetchShapes,\n  fetchGrades,\n  createLineItem,\n  editLineitem,\n  deleteLineItem,\n} from '../services/api';\nimport EditPopup from './EditPopup';\n\n\n\nconst OrderDetails = () => {\n  const { id } = useParams();\n  const [order, setOrder] = useState(null);\n  const [lineItems, setLineItems] = useState([]);\n  const [fetchedLineItems, setfetchedLineItems] = useState([]);\n  const [nextLineItemId, setNextLineItemId] = useState(''); // Next available lineItemId\n  const [processes, setProcesses] = useState([]);\n  const [vendors, setVendors] = useState([]);\n  const [shapes, setShapes] = useState([]);\n  const [grades, setGrades] = useState([]);\n  const allPossibleDimensions = ['length', 'breadth', 'thickness', 'diameter'];\n\n  const shapeDimensionMap = {\n    'Sheet': ['length', 'breadth', 'thickness'],\n    'round bar': ['diameter', 'length'],\n    'square bar': ['thickness', 'length'],\n    'hexagon bar': ['thickness', 'length'],\n    'flat bar': ['length', 'breadth', 'thickness'],\n  };\n  const [newLineItem, setNewLineItem] = useState({\n    shape: '',\n    grade: '',\n    dimensions: { length: '', breadth: '', thickness: '', diameter: '' },\n    quantity: '',\n    weight: '',\n    processIds: [],\n    vendorIds: [],\n  });\n  const [density, setDensity] = useState(0);\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    const loadOrderData = async () => {\n      try {\n        const orderData = await fetchOrder(id);\n        console.log('Fetched Order:', orderData);\n        setOrder(orderData);\n\n        const lineItemData = await fetchLineItems(id);\n        console.log('Fetched Line Items:', lineItemData);\n        setLineItems(lineItemData);\n        setfetchedLineItems(lineItemData.data);\n        const { data } = await axios.get(`http://localhost:5045/api/lineitems/nextLineItemId/${id}`);\n        setNextLineItemId(data.nextLineItemId);\n      } catch (err) {\n        console.error('Error fetching data:', err.message);\n        setMessage('Failed to load data.');\n      }\n    };\n    loadOrderData();\n  }, [id]);\n\n  const fetchShapesOnClick = async () => {\n    if (shapes.length > 0) return;\n    try {\n      const shapeData = await fetchShapes();\n      setShapes(shapeData);\n    } catch (err) {\n      console.error('Error fetching shapes:', err.message);\n    }\n  };\n\n  const fetchGradesOnClick = async () => {\n    if (grades.length > 0) return;\n    try {\n      const gradeData = await fetchGrades();\n      setGrades(gradeData);\n    } catch (err) {\n      console.error('Error fetching grades:', err.message);\n    }\n  };\n\n  const fetchVendorsOnClick = async () => {\n    if (vendors.length > 0) return;\n    try {\n      const vendorData = await fetchVendors();\n      setVendors(vendorData);\n    } catch (err) {\n      console.error('Error fetching vendors:', err.message);\n    }\n  };\n\n  const fetchProcessesOnClick = async () => {\n    if (processes.length > 0) return;\n    try {\n      const processData = await fetchProcesses();\n      setProcesses(processData);\n    } catch (err) {\n      console.error('Error fetching processes:', err.message);\n    }\n  };\n\n  const fetchLineItemsForOrder = async () => {\n    try {\n      \n      const lineItemData = await fetchLineItems(order.orderId);\n      setfetchedLineItems(lineItemData.data);\n      console.log(\"fetched Lineitems Again: \",fetchedLineItems);\n    } catch (err) {\n      console.error('Error fetching updated line items:', err.message);\n    }\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // Validate and log the dimensions\n    const { dimensions } = newLineItem;\n    console.log('Submitting Dimensions:', dimensions);\n    const updatedDimensions = {};\n    allPossibleDimensions.forEach((dimension) => {\n      updatedDimensions[dimension] = dimensions[dimension] || null;\n    });\n    // Check if all dimensions are numbers or null\n    const allValid = Object.values(updatedDimensions).every(\n      (value) => value === null || typeof value === 'number'\n    );\n  \n    if (!allValid) {\n      console.error('Invalid dimensions:', updatedDimensions);\n      setMessage('Please provide valid numeric dimensions.');\n      return;\n    }\n  \n    console.log('Submitting Line Item:', { ...newLineItem, orderId: id, lineItemId: nextLineItemId,dimensions:updatedDimensions });\n  \n    try {\n      const response = await createLineItem({ ...newLineItem, orderId: id, lineItemId: nextLineItemId ,dimensions:updatedDimensions });\n      console.log('Line Item Created:', response);\n  \n      setMessage('Line item added successfully!');\n      fetchLineItemsForOrder();\n      \n      setLineItems((prev) => (Array.isArray(prev) ? [...prev, response] : [response]));\n      setNewLineItem({\n        shape: '',\n        grade: '',\n        dimensions: { length: updatedDimensions.length, breadth: updatedDimensions.breadth, thickness: updatedDimensions.thickness, diameter: updatedDimensions.diameter },\n        quantity: '',\n        weight: '',\n        processIds: [],\n        vendorIds: [],\n      });\n      const lineItemData = await fetchLineItems(id);\n      setLineItems(lineItemData);\n      // Fetch next lineItemId for subsequent additions\n      const { data } = await axios.get(`http://localhost:5045/api/lineitems/nextLineItemId/${id}`);\n      setNextLineItemId(data.nextLineItemId);\n    } catch (err) {\n      console.error('Failed to add line item:', err.response?.data || err.message);\n      setMessage('Failed to add line item.');\n    }\n  };\n\n\n  const calculateWeight = useCallback(() => {\n    const { shape, dimensions, quantity } = newLineItem;\n    const { length, breadth, thickness, diameter } = dimensions;\n  \n    if (!shape || !density || !quantity || quantity <= 0) {\n      return { totalWeight: '', weightPerUnit: '' }; // Return empty if missing key data\n    }\n  \n    let volume = 0;\n  \n    if (shape === 'round bar') {\n      if (diameter && length) {\n        volume = Math.PI * Math.pow(diameter / 2, 2) * length; // Volume of a cylinder\n      }\n    } else if (shape === 'Sheet' || shape === 'flat bar') {\n      if (length && breadth && thickness) {\n        volume = length * breadth * thickness; // Volume of a rectangular block\n      }\n    } else if (shape === 'square bar') {\n      if (thickness && length) {\n        volume = Math.pow(thickness, 2) * length; // Volume of a square cross-section bar\n      }\n    } else if (shape === 'hexagon bar') {\n      if (thickness && length) {\n        const area = (3 * Math.sqrt(3) * Math.pow(thickness / 2, 2)) / 2; // Area of hexagon\n        volume = area * length; // Volume of hexagonal prism\n      }\n    }\n  \n    const totalWeight = volume * density * quantity*0.000001; // Multiply by quantity\n    const weightPerUnit = totalWeight / quantity; // Divide totalWeight by quantity\n  \n    return {\n      totalWeight: isNaN(totalWeight) ? '' : totalWeight.toFixed(2),\n      weightPerUnit: isNaN(weightPerUnit) ? '' : weightPerUnit.toFixed(2),\n    };\n  }, [newLineItem, density]); // Dependencies for useCallback\n  \n  \n  \n  const fetchDensity = async (selectedGrade) => {\n    const grade = grades.find((g) => g.grade === selectedGrade);\n    return grade ? grade.density : 0; // Return 0 if no matching grade\n  };\n  \n  const handleDropdownChange = async (e) => {\n    const { name, value } = e.target;\n  \n    if (name === 'grade') {\n      const fetchedDensity = await fetchDensity(value);\n      setDensity(fetchedDensity);\n      setNewLineItem((prev) => ({ ...prev, [name]: value }));\n    } else {\n      setNewLineItem((prev) => ({ ...prev, [name]: value }));\n    }\n  };\n\n  \n\nconst [editingLineItem, setEditingLineItem] = useState(null); // Line item to edit\nconst [isEditPopupOpen, setIsEditPopupOpen] = useState(false); // Whether popup is open\n\nconst handleEditLineItem = (item) => {\n  setEditingLineItem(item); // Set the line item being edited\n  setIsEditPopupOpen(true); // Open the popup\n};\nconst handleDeleteLineItem = async (lineItemId) => {\n  try {\n    // Confirm deletion\n    if (!window.confirm('Are you sure you want to delete this line item?')) {\n      return; // Exit if user cancels\n    }\n\n    // Call the delete API\n    const response = await deleteLineItem(encodeURIComponent(lineItemId));\n    console.log('Line Item Deleted:', response.data);\n\n    // Refresh the list of line items after deletion\n    await fetchLineItemsForOrder();\n    \n    // Show success message\n    setMessage(`✅ Line item ${lineItemId} deleted successfully!`);\n  } catch (err) {\n    console.error('❌ Error deleting line item:', err.response?.data || err.message);\n    setMessage('❌ Failed to delete line item.');\n  }\n};\n\n\n\nconst handleUpdateLineItem = async (updatedLineItem) => {\n  try {\n    console.log('Update button clicked:', updatedLineItem);\n\n    // Validate data\n    if (\n      !Array.isArray(updatedLineItem.processIds) ||\n      !Array.isArray(updatedLineItem.vendorIds)\n    ) {\n      throw new Error('processIds and vendorIds must be arrays.');\n    }\n\n    console.log('processIds:', updatedLineItem.processIds);\n    console.log('vendorIds:', updatedLineItem.vendorIds);\n\n    // Encode the lineItemId once\n    const encodedLineItemId = encodeURIComponent(updatedLineItem.lineItemId);\n    console.log('Encoded Line Item ID:', encodedLineItemId);\n\n    const response = await editLineitem(encodedLineItemId, {\n      processIds: updatedLineItem.processIds,\n      vendorIds: updatedLineItem.vendorIds,\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    console.log('Updated Line Item:', response.data);\n\n    // Refresh the line items\n    fetchLineItemsForOrder();\n    setIsEditPopupOpen(false); // Close the popup\n  } catch (err) {\n    console.error('Error updating line item:', err.response?.data || err.message);\n  }\n};\n\n\n\nuseEffect(() => {\n  console.log('Shape:', newLineItem.shape);\n  console.log('Grade:', newLineItem.grade);\n  console.log('Dimensions:', newLineItem.dimensions);\n  console.log('Density:', density);\n  if (newLineItem.shape || newLineItem.grade || Object.values(newLineItem.dimensions).some((val) => val)) {\n    setNewLineItem((prev) => ({ ...prev, weight: calculateWeight() }));\n  }\n}, [newLineItem.shape, newLineItem.grade, newLineItem.dimensions]);\nuseEffect(() => {\n  const { totalWeight, weightPerUnit } = calculateWeight();\n  setNewLineItem((prev) => ({\n    ...prev,\n    weight: totalWeight, // Update total weight in the state\n    weightPerUnit, // Update weight per unit in the state\n  }));\n}, [newLineItem.shape, newLineItem.dimensions, newLineItem.quantity, density, calculateWeight]);\n\n\n\nuseEffect(() => {\n\n  console.log('Updated fetchedLineItems:', fetchedLineItems.data);\n  console.log('Fetched Line Items:', fetchedLineItems);\nconsole.log('Is Array:', Array.isArray(fetchedLineItems));\nconsole.log('Length:', fetchedLineItems);\n\n}, [fetchedLineItems]); // This will log whenever `fetchedLineItems` changes\n\nconst handleShapeChange = (e) => {\n  const selectedShape = e.target.value;\n  setNewLineItem((prev) => ({\n    ...prev,\n    shape: selectedShape,\n    dimensions: { length: '', breadth: '', thickness: '', diameter: '' }, // Reset dimensions\n    weight: '', // Clear weight\n  }));\n};\n\n\n  const renderDimensionFields = () => {\n    const selectedShape = newLineItem.shape;\n    const dimensionsToRender = shapeDimensionMap[selectedShape] || [];\n\n    return (\n      <div className='textbox-container'>\n        {dimensionsToRender.map((dimension) => (\n          <input\n            key={dimension}\n            type=\"number\"\n            name={dimension}\n            placeholder={dimension.charAt(0).toUpperCase() + dimension.slice(1)}\n            value={newLineItem.dimensions[dimension] || ''}\n            onChange={(e) =>\n              setNewLineItem((prev) => ({\n                ...prev,\n                dimensions: {\n                  ...prev.dimensions,\n                  [dimension]: parseFloat(e.target.value) || null,\n                },\n              }))\n            }\n            required\n          />\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <h1>Order Details</h1>\n      {order && (\n        <div>\n          <p>Order ID: {order.orderId}</p>\n          <p>Creator: {order.creator}</p>\n        </div>\n      )}\n\n      <h2>Add New Line Item</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"lineItemId\">Next Line Item ID:</label>\n          <input type=\"text\" id=\"lineItemId\" value={nextLineItemId} readOnly />\n        </div>\n\n        {/* Shape Selection */}\n        <select\n          name=\"shape\"\n          value={newLineItem.shape}\n          onChange={handleShapeChange}\n          onClick={fetchShapesOnClick}\n        >\n          <option value=\"\">Select Shape</option>\n          {Array.isArray(shapes) && shapes.length > 0 ? (\n            shapes.map((shape) => (\n              <option key={shape._id} value={shape.shapeId}>\n                {shape.shapeId}\n              </option>\n            ))\n          ) : (\n            <option disabled>No shapes available</option>\n          )}\n        </select>\n\n        <select\n          name=\"grade\"\n          value={newLineItem.grade}\n          onChange={handleDropdownChange}\n          onClick={fetchGradesOnClick}\n        >\n          <option value=\"\">Select Grade</option>\n          {Array.isArray(grades) && grades.length > 0 ? (\n            grades.map((grade) => (\n              <option key={grade._id} value={grade.grade}>\n                {grade.grade}\n              </option>\n            ))\n          ) : (\n            <option disabled>No grades available</option>\n          )}\n        </select>\n\n        {/* Dynamic Dimension Fields */}\n        {renderDimensionFields()}\n\n        <input\n          type=\"number\"\n          placeholder=\"Quantity\"\n          value={newLineItem.quantity}\n          onChange={(e) =>\n            setNewLineItem((prev) => ({ ...prev, quantity: e.target.value }))\n          }\n          required\n        />\n\n<input\n          type=\"hidden\"\n          placeholder=\"Weight\"\n          value={newLineItem.weight} // Dynamically updated weight\n          readOnly\n          \n          required\n        /> \n  <input\n    type=\"number\"\n    placeholder=\"Total Weight\"\n    value={newLineItem.weight || ''} // Dynamically updated weight\n    readOnly\n    required\n  />\n\n  {/* Weight Per Unit (Read-Only) */}\n  <input\n    type=\"number\"\n    placeholder=\"Weight Per Unit\"\n    value={newLineItem.weightPerUnit || ''} // Dynamically updated weight per unit\n    readOnly\n  />\n\n<select\n  name=\"processIds\"\n  value={newLineItem.processIds[0] || ''}\n  onChange={(e) =>\n    setNewLineItem((prev) => ({\n      ...prev,\n      processIds: [e.target.value], // Set the first selected process\n    }))\n  }\n  onClick={fetchProcessesOnClick}\n>\n  <option value=\"\">Select Process</option>\n  {Array.isArray(processes) && processes.length > 0 ? (\n    processes.map((process) => (\n      <option key={process._id} value={process.processId}>\n        {process.processId}\n      </option>\n    ))\n  ) : (\n    <option disabled>No processes available</option>\n  )}\n</select>\n\n<select\n  name=\"vendorIds\"\n  value={newLineItem.vendorIds[0] || ''}\n  onChange={(e) =>\n    setNewLineItem((prev) => ({\n      ...prev,\n      vendorIds: [e.target.value], // Set the first selected vendor\n    }))\n  }\n  onClick={fetchVendorsOnClick}\n>\n  <option value=\"\">Select Vendor</option>\n  {Array.isArray(vendors) && vendors.length > 0 ? (\n    vendors.map((vendor) => (\n      <option key={vendor._id} value={vendor.vendorId}>\n        {vendor.vendorId}\n      </option>\n    ))\n  ) : (\n    <option disabled>No vendors available</option>\n  )}\n</select>\n\n\n        <button type=\"submit\">Add Line Item</button>\n      </form>\n      {message && <p>{message}</p>}\n\n      <h2>Existing Line Items</h2>\n      \n      {fetchedLineItems.length > 0 ? (\n        <table>\n          \n          <thead>\n            <tr>\n              <th>Line Item ID</th>\n              <th>Shape</th>\n              <th>Grade</th>\n              <th>Dimensions</th>\n              <th>Quantity</th>\n              <th>Weight</th>\n              <th>Processes</th>\n              <th>Vendors</th>\n            </tr>\n          </thead>\n          <tbody>\n            {fetchedLineItems.map((item, index) => (\n              <tr key={index}>\n                <td>{item.lineItemId || 'Unknown'}</td>\n                <td>{item.shape || 'N/A'}</td>\n                <td>{item.grade || 'N/A'}</td>\n                <td>\n  {item.dimensions\n    ? Object.entries(item.dimensions)\n        .filter(([_, value]) => value && value !== 'N/A') // Filter out keys with N/A or empty values\n        .map(([key, value]) => `${key}: ${value}`)\n        .join(', ')\n    : 'N/A'}\n</td>\n\n                <td>{item.quantity || 'N/A'}</td>\n                <td>{item.weight || 'N/A'}</td>\n                <td>\n                  {Array.isArray(item.processIds)\n                    ? item.processIds.join(', ') // Show all selected processIds\n                    : 'N/A'}\n                </td>\n                <td>\n                  {Array.isArray(item.vendorIds)\n                    ? item.vendorIds.join(', ') // Show all selected vendorIds\n                    : 'N/A'}\n                </td>\n                <td>\n        <button onClick={() => handleEditLineItem(item)}>Edit</button>\n      </td> \n      <td>\n        <button onClick={() => handleDeleteLineItem(item.lineItemId)}>Delete</button>\n      </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <p>No line items available</p>\n      )}\n      {isEditPopupOpen && editingLineItem && (\n  <EditPopup\n    lineItem={editingLineItem}\n    onClose={() => setIsEditPopupOpen(false)}\n    onSave={(updatedLineItem) => {\n      console.log('Save clicked with:', updatedLineItem);\n      handleUpdateLineItem(updatedLineItem); // Update the line item\n    }}\n  />\n)}\n    </div>\n  );\n};\n\n\nexport default OrderDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}