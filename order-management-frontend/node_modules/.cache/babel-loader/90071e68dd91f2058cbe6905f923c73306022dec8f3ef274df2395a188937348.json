{"ast":null,"code":"import _objectSpread from\"/Users/nshah/GPT Project/order-management-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// File: src/pages/CreateProcess.js\nimport React,{useState}from'react';import{createProcess}from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CreateProcess=()=>{const[process,setProcess]=useState({processId:''});const[message,setMessage]=useState('');const handleChange=e=>{const{name,value}=e.target;setProcess(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));};const handleSubmit=async e=>{e.preventDefault();try{await createProcess(process);setMessage('Process created successfully!');setProcess({processId:''});}catch(err){setMessage('Failed to create process.');}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Create Process\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"processId\",placeholder:\"Process ID\",value:process.processId,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Create Process\"})]}),message&&/*#__PURE__*/_jsx(\"p\",{children:message})]});};export default CreateProcess;","map":{"version":3,"names":["React","useState","createProcess","jsx","_jsx","jsxs","_jsxs","CreateProcess","process","setProcess","processId","message","setMessage","handleChange","e","name","value","target","prev","_objectSpread","handleSubmit","preventDefault","err","children","onSubmit","type","placeholder","onChange","required"],"sources":["/Users/nshah/GPT Project/order-management-frontend/src/pages/CreateProcess.js"],"sourcesContent":["// File: src/pages/CreateProcess.js\nimport React, { useState } from 'react';\nimport { createProcess } from '../services/api';\n\nconst CreateProcess = () => {\n  const [process, setProcess] = useState({ processId: '' });\n  const [message, setMessage] = useState('');\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setProcess((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await createProcess(process);\n      setMessage('Process created successfully!');\n      setProcess({ processId: '' });\n    } catch (err) {\n      setMessage('Failed to create process.');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Create Process</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"processId\"\n          placeholder=\"Process ID\"\n          value={process.processId}\n          onChange={handleChange}\n          required\n        />\n        <button type=\"submit\">Create Process</button>\n      </form>\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default CreateProcess;\n"],"mappings":"uIAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,aAAa,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhD,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGR,QAAQ,CAAC,CAAES,SAAS,CAAE,EAAG,CAAC,CAAC,CACzD,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAE1C,KAAM,CAAAY,YAAY,CAAIC,CAAC,EAAK,CAC1B,KAAM,CAAEC,IAAI,CAAEC,KAAM,CAAC,CAAGF,CAAC,CAACG,MAAM,CAChCR,UAAU,CAAES,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAAWD,IAAI,MAAE,CAACH,IAAI,EAAGC,KAAK,EAAG,CAAC,CACpD,CAAC,CAED,KAAM,CAAAI,YAAY,CAAG,KAAO,CAAAN,CAAC,EAAK,CAChCA,CAAC,CAACO,cAAc,CAAC,CAAC,CAClB,GAAI,CACF,KAAM,CAAAnB,aAAa,CAACM,OAAO,CAAC,CAC5BI,UAAU,CAAC,+BAA+B,CAAC,CAC3CH,UAAU,CAAC,CAAEC,SAAS,CAAE,EAAG,CAAC,CAAC,CAC/B,CAAE,MAAOY,GAAG,CAAE,CACZV,UAAU,CAAC,2BAA2B,CAAC,CACzC,CACF,CAAC,CAED,mBACEN,KAAA,QAAAiB,QAAA,eACEnB,IAAA,OAAAmB,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBjB,KAAA,SAAMkB,QAAQ,CAAEJ,YAAa,CAAAG,QAAA,eAC3BnB,IAAA,UACEqB,IAAI,CAAC,MAAM,CACXV,IAAI,CAAC,WAAW,CAChBW,WAAW,CAAC,YAAY,CACxBV,KAAK,CAAER,OAAO,CAACE,SAAU,CACzBiB,QAAQ,CAAEd,YAAa,CACvBe,QAAQ,MACT,CAAC,cACFxB,IAAA,WAAQqB,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,gBAAc,CAAQ,CAAC,EACzC,CAAC,CACNZ,OAAO,eAAIP,IAAA,MAAAmB,QAAA,CAAIZ,OAAO,CAAI,CAAC,EACzB,CAAC,CAEV,CAAC,CAED,cAAe,CAAAJ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}