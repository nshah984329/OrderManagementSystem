{"ast":null,"code":"import _objectSpread from\"/Users/nshah/GPT Project/order-management-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{fetchExecutionDetailsForLineItem,addExecutionDetails,fetchVendors,fetchProcesses,fetchLineItemProcesses,reorderLineItemProcesses,createLineItemProcess,deleteLineItemProcess,fetchAllVendorProcesses}from'../services/api';import{DndContext,closestCenter}from'@dnd-kit/core';import{arrayMove,SortableContext,useSortable,sortableKeyboardCoordinates,verticalListSortingStrategy}from'@dnd-kit/sortable';import ExecutionEditPopup from'./ExecutionEditPopup';// ‚úÖ Import ExecutionEditPopup\nimport{KeyboardSensor,PointerSensor,useSensor,useSensors}from'@dnd-kit/core';import{CSS}from'@dnd-kit/utilities';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const EditPopup=_ref=>{let{lineItem,onClose,onSave}=_ref;const[vendors,setVendors]=useState([]);// Vendor list\nconst[processes,setProcesses]=useState([]);// Process list\nconst[vendorProcesses,setVendorProcesses]=useState([]);// Vendor-Process relationships\nconst[lineItemProcesses,setLineItemProcesses]=useState([]);// Existing LineItemProcesses\nconst[newProcess,setNewProcess]=useState({processId:'',vendorId:''});const[draggedProcess,setDraggedProcess]=useState(null);const[filteredVendors,setFilteredVendors]=useState([]);// Vendors filtered by process\nconst[filteredProcesses,setFilteredProcesses]=useState([]);// Processes filtered by vendor\nconst[selectedExecution,setSelectedExecution]=useState(null);// ‚úÖ Execution to be edited\nuseEffect(()=>{// Fetch initial data for vendors, processes, and line item processes\nconst loadInitialData=async()=>{try{const encodedLineItemId=encodeURIComponent(lineItem.lineItemId);// Encode lineItemId\nconsole.log('editpopup: Encoded lineItemId:',encodedLineItemId);// Fetch vendors\nconst vendorData=await fetchVendors();console.log('editpopup: Fetched vendors:',vendorData);setVendors(vendorData);// Fetch processes\nconst processData=await fetchProcesses();console.log('editpopup: Fetched processes:',processData);setProcesses(processData);// Fetch line item processes\nconst lineItemProcessData=await fetchLineItemProcesses(encodedLineItemId);console.log('editpopup: Fetched line item processes:',lineItemProcessData);console.log('Fetching initial data...');const vendorProcessData=await fetchAllVendorProcesses();console.log('Fetched all vendor-process mappings:',vendorProcessData);if(!Array.isArray(vendorProcessData)){console.error('Invalid data format for vendorProcesses:',vendorProcessData);return;}setVendorProcesses(vendorProcessData);// Log each item in lineItemProcessData\nlineItemProcessData.forEach((item,index)=>{console.log(\"editpopup: Line item process \".concat(index,\":\"),item);console.log(\"editpopup: Line item process \".concat(index,\" _id:\"),item._id);});setLineItemProcesses(lineItemProcessData.map((process,index)=>_objectSpread(_objectSpread({},process),{},{customId:\"\".concat(process.lineItemId,\"/\").concat(process.vendorId,\"/\").concat(process.processId,\"/\").concat(process.sequence)})));//setVendorProcesses(vendorProcessData);\n}catch(err){console.error('editpopup: Error loading initial data:',err.message);}};if(lineItem.lineItemId){loadInitialData();// Fetch data if lineItemId is available\n}},[lineItem.lineItemId]);// Filter vendors based on selected process\nuseEffect(()=>{console.log('Filtering vendors for processId:',newProcess.processId);console.log('Current Vendor-Process mappings:',vendorProcesses);console.log('Current Vendors:',vendors);if(newProcess.processId){const allowedVendors=vendorProcesses.filter(vp=>vp.processId===newProcess.processId).map(vp=>vp.vendorId);console.log('Allowed Vendors:',allowedVendors);const updatedVendors=vendors.filter(v=>allowedVendors.includes(v.vendorId));console.log('Filtered Vendors:',updatedVendors);setFilteredVendors(updatedVendors);}else{setFilteredVendors(vendors);}},[newProcess.processId,vendors,vendorProcesses]);useEffect(()=>{if(newProcess.vendorId){console.log('Filtering processes for vendorId:',newProcess.vendorId);const allowedProcesses=vendorProcesses.filter(vp=>vp.vendorId===newProcess.vendorId).map(vp=>vp.processId);console.log('Allowed Processes:',allowedProcesses);setFilteredProcesses(processes.filter(p=>allowedProcesses.includes(p.processId)));}else{setFilteredProcesses(processes);}},[newProcess.vendorId,processes,vendorProcesses]);// Sensors for drag-and-drop\nconst sensors=useSensors(useSensor(PointerSensor,{activationConstraint:{distance:10}// üëà Prevent accidental drag\n}),useSensor(KeyboardSensor,{coordinateGetter:sortableKeyboardCoordinates}));// Sortable item component\nconst SortableItem=_ref2=>{let{process}=_ref2;const{attributes,listeners,setNodeRef,transform,transition}=useSortable({id:process.customId,disabled:false// üëà Prevents buttons from triggering drag\n});const handleRemove=async e=>{e.stopPropagation();// ‚úÖ Prevent drag from triggering\ne.preventDefault();// ‚úÖ Prevent unintended behavior\nconsole.log(\"\\uD83D\\uDD34 Removing process: \".concat(process.customId));try{await deleteLineItemProcess(lineItem.lineItemId,process.customId);setLineItemProcesses(prev=>prev.filter(item=>item.customId!==process.customId));}catch(err){console.error('Error removing process:',err);}};const handleEditExecution=async e=>{e.stopPropagation();// ‚úÖ Prevent drag from triggering\ne.preventDefault();// ‚úÖ Prevent unintended behavior\nconsole.log(\"\\uD83D\\uDFE0 Editing Execution for Process: \".concat(process.customId));try{const executionDetails=await fetchExecutionDetailsForLineItem(lineItem.lineItemId);const execution=executionDetails.find(exec=>exec.processId===process.processId&&exec.vendorId===process.vendorId);if(execution){setSelectedExecution(execution);}else{console.warn(\"‚ö†Ô∏è No execution details found for this process\");}}catch(error){console.error('Error fetching execution details:',error);}};const style={transform:CSS.Transform.toString(transform),transition,padding:'10px',margin:'5px 0',background:'#f8f8f8',border:'1px solid #ddd',borderRadius:'4px',display:'flex',justifyContent:'space-between',alignItems:'center'};return/*#__PURE__*/_jsxs(\"div\",_objectSpread(_objectSpread(_objectSpread({ref:setNodeRef,style:style},attributes),listeners),{},{children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Sequence: \",process.sequence,\", Process: \",process.processId,\", Vendor: \",process.vendorId]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'10px'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleEditExecution,onMouseDown:e=>e.stopPropagation()// üëà Fix: Prevent drag on button\n,onTouchStart:e=>e.stopPropagation()// üëà Fix: Prevent touch drag\n,style:{background:'orange',color:'white',cursor:'pointer'},children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleRemove,onMouseDown:e=>e.stopPropagation(),onTouchStart:e=>e.stopPropagation(),style:{color:'red',border:'none',background:'none',cursor:'pointer'},children:\"Remove\"})]})]}));};const handleDragEnd=event=>{if(!event||!event.active||!event.over){console.warn('handleDragEnd: Missing active or over:',event);return;}const{active,over}=event;if(!active.id||!over.id){console.warn('handleDragEnd: Missing ID in active or over:',{active,over});return;}console.log(\"handleDragEnd: Moving \".concat(active.id,\" over \").concat(over.id));setLineItemProcesses(items=>{const oldIndex=items.findIndex(item=>item.customId===active.id);const newIndex=items.findIndex(item=>item.customId===over.id);if(oldIndex===-1||newIndex===-1){console.warn('handleDragEnd: Invalid indices:',{oldIndex,newIndex});return items;}const updatedItems=arrayMove(items,oldIndex,newIndex);return updatedItems.map((item,index)=>_objectSpread(_objectSpread({},item),{},{sequence:index+1,customId:\"\".concat(item.lineItemId,\"/\").concat(item.vendorId,\"/\").concat(item.processId,\"/\").concat(index+1)}));});};const handleAddProcess=async()=>{if(!newProcess.processId||!newProcess.vendorId){console.warn('editpopup: Please select both a process and a vendor before adding.');return;}try{// Generate sequence number based on current processes count\nconst newSequence=lineItemProcesses.length+1;// Create a unique custom ID\nconst newCustomId=\"\".concat(lineItem.lineItemId,\"/\").concat(newProcess.vendorId,\"/\").concat(newProcess.processId,\"/\").concat(newSequence);// Check if the same process already exists\nconst isDuplicate=lineItemProcesses.some(item=>item.customId===newCustomId);if(isDuplicate){console.warn(\"editpopup: Process with ID \".concat(newCustomId,\" already exists.\"));return;}const newEntry={lineItemId:lineItem.lineItemId,processId:newProcess.processId,vendorId:newProcess.vendorId,sequence:newSequence,customId:newCustomId};console.log('editpopup: Sending new process to backend:',newEntry);// Save to backend and capture response\nconst response=await createLineItemProcess(newEntry);if(!response||response.error){console.error('editpopup: Backend error:',(response===null||response===void 0?void 0:response.error)||'Unknown error');return;}console.log('editpopup: Process successfully added:',response);// Fetch latest processes instead of appending manually (prevents stale data issues)\nconst updatedProcesses=await fetchLineItemProcesses(encodeURIComponent(lineItem.lineItemId));// Update state with the newly fetched list\nsetLineItemProcesses(updatedProcesses.map((process,index)=>_objectSpread(_objectSpread({},process),{},{sequence:index+1,// Ensure correct sequence\ncustomId:\"\".concat(process.lineItemId,\"/\").concat(process.vendorId,\"/\").concat(process.processId,\"/\").concat(index+1)})));console.log('editpopup: Updated lineItemProcesses after addition:',updatedProcesses);// Reset form input\nsetNewProcess({processId:'',vendorId:''});}catch(err){console.error('editpopup: Error adding new process:',err);}};// **üìè Dynamic Popup Sizing**\nconst popupHeight=Math.min(300+lineItemProcesses.length*40,600);// Max height 600px\nconst popupWidth=Math.min(400+lineItemProcesses.length*20,800);// Max width 800px\nconst handleSave=async()=>{try{const encodedLineItemId=encodeURIComponent(lineItem.lineItemId);console.log(\"editpopup: Encoded lineItemId for save: \".concat(encodedLineItemId));// Extract unique processIds and vendorIds from lineItemProcesses\nconst updatedProcessIds=[...new Set(lineItemProcesses.map(p=>p.processId))];const updatedVendorIds=[...new Set(lineItemProcesses.map(p=>p.vendorId))];console.log(\"Updated Process IDs:\",updatedProcessIds);console.log(\"Updated Vendor IDs:\",updatedVendorIds);// Prepare the payload for saving reordered processes\nconst reorderedProcessesPayload=lineItemProcesses.map(process=>({customId:process.customId,sequence:process.sequence}));console.log(\"Saving reordered processes:\",reorderedProcessesPayload);await reorderLineItemProcesses(encodedLineItemId,reorderedProcessesPayload);console.log(\"editpopup: Saved reordered processes successfully!\");// Fetch existing execution details to prevent duplicates\nconsole.log(\"editpopup: Saving execution details for lineItemId: \".concat(lineItem.lineItemId));const existingExecutions=await fetchExecutionDetailsForLineItem(lineItem.lineItemId);const newExecutions=lineItemProcesses.map(process=>{const executionExists=existingExecutions.some(exec=>exec.processId===process.processId&&exec.vendorId===process.vendorId&&exec.lineItemId===lineItem.lineItemId);if(!executionExists){return{lineItemId:lineItem.lineItemId,orderId:lineItem.orderId,processId:process.processId,vendorId:process.vendorId,outWeight:lineItem.weight||0,inWeight:0,dateSent:new Date().toISOString().split('T')[0],dateReceived:null,piecesSent:process.piecesSent!==undefined?process.piecesSent:1,piecesReceived:0,status:'Pending',dateCreated:new Date().toISOString()};}return null;}).filter(Boolean);for(const execution of newExecutions){console.log(\"‚úÖ Sending Execution:\",execution);await addExecutionDetails(execution);}// Update the parent component with new processIds and vendorIds\nonSave(_objectSpread(_objectSpread({},lineItem),{},{processIds:updatedProcessIds,vendorIds:updatedVendorIds}));onClose();}catch(err){console.error(\"editpopup: Error saving processes:\",err.message);}};const handleExecutionSave=updatedExecution=>{setLineItemProcesses(prev=>prev.map(process=>process.processId===updatedExecution.processId&&process.vendorId===updatedExecution.vendorId?_objectSpread(_objectSpread({},process),updatedExecution):process));setSelectedExecution(null);};return/*#__PURE__*/_jsxs(\"div\",{className:\"popup\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"popup-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"popup-content\",style:{width:\"\".concat(popupWidth,\"px\"),// Dynamic width\nheight:\"\".concat(popupHeight,\"px\"),// Dynamic height\noverflowY:\"auto\"// Scroll if too large\n},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Edit Line Item\"}),/*#__PURE__*/_jsx(DndContext,{sensors:sensors,collisionDetection:closestCenter,onDragEnd:handleDragEnd,children:/*#__PURE__*/_jsx(SortableContext,{items:lineItemProcesses.map(process=>process.customId),strategy:verticalListSortingStrategy,children:lineItemProcesses.map(process=>{const id=process.customId;const validProcess=process&&id;return validProcess?/*#__PURE__*/_jsx(SortableItem,{id:id,process:process// Pass the entire process object\n},id):null;})})}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Add New Process\"}),/*#__PURE__*/_jsxs(\"select\",{value:newProcess.processId,onChange:e=>setNewProcess(prev=>_objectSpread(_objectSpread({},prev),{},{processId:e.target.value})),style:{marginRight:'10px'},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Process\"}),filteredProcesses.map(process=>/*#__PURE__*/_jsx(\"option\",{value:process.processId,children:process.processId},process.processId))]}),/*#__PURE__*/_jsxs(\"select\",{value:newProcess.vendorId,onChange:e=>setNewProcess(prev=>_objectSpread(_objectSpread({},prev),{},{vendorId:e.target.value})),style:{marginRight:'10px'},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Vendor\"}),filteredVendors.map(vendor=>/*#__PURE__*/_jsx(\"option\",{value:vendor.vendorId,children:vendor.vendorId},vendor.vendorId))]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAddProcess,style:{padding:'5px 10px',background:'blue',color:'white'},children:\"Add\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'20px'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleSave,style:{padding:'5px 10px',background:'green',color:'white'},children:\"Save\"}),/*#__PURE__*/_jsx(\"button\",{onClick:onClose,style:{padding:'5px 10px',background:'red',color:'white'},children:\"Cancel\"})]})]})}),selectedExecution&&/*#__PURE__*/_jsx(ExecutionEditPopup,{execution:selectedExecution,onClose:()=>setSelectedExecution(null),onSave:handleExecutionSave})]});};export default EditPopup;","map":{"version":3,"names":["React","useState","useEffect","fetchExecutionDetailsForLineItem","addExecutionDetails","fetchVendors","fetchProcesses","fetchLineItemProcesses","reorderLineItemProcesses","createLineItemProcess","deleteLineItemProcess","fetchAllVendorProcesses","DndContext","closestCenter","arrayMove","SortableContext","useSortable","sortableKeyboardCoordinates","verticalListSortingStrategy","ExecutionEditPopup","KeyboardSensor","PointerSensor","useSensor","useSensors","CSS","jsxs","_jsxs","jsx","_jsx","EditPopup","_ref","lineItem","onClose","onSave","vendors","setVendors","processes","setProcesses","vendorProcesses","setVendorProcesses","lineItemProcesses","setLineItemProcesses","newProcess","setNewProcess","processId","vendorId","draggedProcess","setDraggedProcess","filteredVendors","setFilteredVendors","filteredProcesses","setFilteredProcesses","selectedExecution","setSelectedExecution","loadInitialData","encodedLineItemId","encodeURIComponent","lineItemId","console","log","vendorData","processData","lineItemProcessData","vendorProcessData","Array","isArray","error","forEach","item","index","concat","_id","map","process","_objectSpread","customId","sequence","err","message","allowedVendors","filter","vp","updatedVendors","v","includes","allowedProcesses","p","sensors","activationConstraint","distance","coordinateGetter","SortableItem","_ref2","attributes","listeners","setNodeRef","transform","transition","id","disabled","handleRemove","e","stopPropagation","preventDefault","prev","handleEditExecution","executionDetails","execution","find","exec","warn","style","Transform","toString","padding","margin","background","border","borderRadius","display","justifyContent","alignItems","ref","children","gap","onClick","onMouseDown","onTouchStart","color","cursor","handleDragEnd","event","active","over","items","oldIndex","findIndex","newIndex","updatedItems","handleAddProcess","newSequence","length","newCustomId","isDuplicate","some","newEntry","response","updatedProcesses","popupHeight","Math","min","popupWidth","handleSave","updatedProcessIds","Set","updatedVendorIds","reorderedProcessesPayload","existingExecutions","newExecutions","executionExists","orderId","outWeight","weight","inWeight","dateSent","Date","toISOString","split","dateReceived","piecesSent","undefined","piecesReceived","status","dateCreated","Boolean","processIds","vendorIds","handleExecutionSave","updatedExecution","className","width","height","overflowY","collisionDetection","onDragEnd","strategy","validProcess","marginTop","value","onChange","target","marginRight","vendor"],"sources":["/Users/nshah/GPT Project/order-management-frontend/src/pages/EditPopup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchExecutionDetailsForLineItem,addExecutionDetails,fetchVendors, fetchProcesses, fetchLineItemProcesses, reorderLineItemProcesses, createLineItemProcess, deleteLineItemProcess,fetchAllVendorProcesses } from '../services/api';\nimport { DndContext, closestCenter } from '@dnd-kit/core';\nimport {\n  arrayMove,\n  SortableContext,\n  useSortable,\n  sortableKeyboardCoordinates,\n  verticalListSortingStrategy,\n} from '@dnd-kit/sortable';\nimport ExecutionEditPopup from './ExecutionEditPopup'; // ‚úÖ Import ExecutionEditPopup\nimport { KeyboardSensor, PointerSensor, useSensor, useSensors } from '@dnd-kit/core';\nimport { CSS } from '@dnd-kit/utilities';\n\nconst EditPopup = ({ lineItem, onClose, onSave }) => {\n  const [vendors, setVendors] = useState([]); // Vendor list\n  const [processes, setProcesses] = useState([]); // Process list\n  const [vendorProcesses, setVendorProcesses] = useState([]); // Vendor-Process relationships\n  const [lineItemProcesses, setLineItemProcesses] = useState([]); // Existing LineItemProcesses\n  const [newProcess, setNewProcess] = useState({ processId: '', vendorId: '' });\n  const [draggedProcess, setDraggedProcess] = useState(null);\n  const [filteredVendors, setFilteredVendors] = useState([]); // Vendors filtered by process\n  const [filteredProcesses, setFilteredProcesses] = useState([]); // Processes filtered by vendor\n  const [selectedExecution, setSelectedExecution] = useState(null); // ‚úÖ Execution to be edited\n\n\n  useEffect(() => {\n    // Fetch initial data for vendors, processes, and line item processes\n    const loadInitialData = async () => {\n      try {\n        const encodedLineItemId = encodeURIComponent(lineItem.lineItemId); // Encode lineItemId\n        console.log('editpopup: Encoded lineItemId:', encodedLineItemId);\n\n        // Fetch vendors\n        const vendorData = await fetchVendors();\n        console.log('editpopup: Fetched vendors:', vendorData);\n        setVendors(vendorData);\n\n        // Fetch processes\n        const processData = await fetchProcesses();\n        console.log('editpopup: Fetched processes:', processData);\n        setProcesses(processData);\n\n        // Fetch line item processes\n        const lineItemProcessData = await fetchLineItemProcesses(encodedLineItemId);\n        console.log('editpopup: Fetched line item processes:', lineItemProcessData);\n        console.log('Fetching initial data...');\n\n        const vendorProcessData = await fetchAllVendorProcesses();\n        console.log('Fetched all vendor-process mappings:', vendorProcessData);\n\n        if (!Array.isArray(vendorProcessData)) {\n          console.error('Invalid data format for vendorProcesses:', vendorProcessData);\n          return;\n        }\n\n        setVendorProcesses(vendorProcessData);\n        // Log each item in lineItemProcessData\n        lineItemProcessData.forEach((item, index) => {\n          console.log(`editpopup: Line item process ${index}:`, item);\n          console.log(`editpopup: Line item process ${index} _id:`, item._id);\n        });\n\n        setLineItemProcesses(\n          lineItemProcessData.map((process, index) => ({\n            ...process,\n            customId: `${process.lineItemId}/${process.vendorId}/${process.processId}/${process.sequence}`,\n          }))\n        );\n        //setVendorProcesses(vendorProcessData);\n      } catch (err) {\n        console.error('editpopup: Error loading initial data:', err.message);\n      }\n    };\n\n    if (lineItem.lineItemId) {\n      loadInitialData(); // Fetch data if lineItemId is available\n    }\n  }, [lineItem.lineItemId]);\n // Filter vendors based on selected process\n useEffect(() => {\n  console.log('Filtering vendors for processId:', newProcess.processId);\n  console.log('Current Vendor-Process mappings:', vendorProcesses);\n  console.log('Current Vendors:', vendors);\n\n  if (newProcess.processId) {\n    const allowedVendors = vendorProcesses\n      .filter(vp => vp.processId === newProcess.processId)\n      .map(vp => vp.vendorId);\n\n    console.log('Allowed Vendors:', allowedVendors);\n    const updatedVendors = vendors.filter(v => allowedVendors.includes(v.vendorId));\n    console.log('Filtered Vendors:', updatedVendors);\n    setFilteredVendors(updatedVendors);\n  } else {\n    setFilteredVendors(vendors);\n  }\n}, [newProcess.processId, vendors, vendorProcesses]);\n\nuseEffect(() => {\n  if (newProcess.vendorId) {\n    console.log('Filtering processes for vendorId:', newProcess.vendorId);\n    const allowedProcesses = vendorProcesses\n      .filter(vp => vp.vendorId === newProcess.vendorId)\n      .map(vp => vp.processId);\n\n    console.log('Allowed Processes:', allowedProcesses);\n    setFilteredProcesses(processes.filter(p => allowedProcesses.includes(p.processId)));\n  } else {\n    setFilteredProcesses(processes);\n  }\n}, [newProcess.vendorId, processes, vendorProcesses]);\n\n  // Sensors for drag-and-drop\n  const sensors = useSensors(\n    useSensor(PointerSensor, {\n      activationConstraint: { distance: 10 } // üëà Prevent accidental drag\n    }),\n    useSensor(KeyboardSensor, {\n      coordinateGetter: sortableKeyboardCoordinates,\n    })\n  );\n\n  // Sortable item component\n  const SortableItem = ({ process }) => {\n    const { attributes, listeners, setNodeRef, transform, transition } = useSortable({ \n      id: process.customId, \n      disabled: false // üëà Prevents buttons from triggering drag\n    });\n    \n  \n    const handleRemove = async (e) => {\n      e.stopPropagation(); // ‚úÖ Prevent drag from triggering\n      e.preventDefault(); // ‚úÖ Prevent unintended behavior\n      console.log(`üî¥ Removing process: ${process.customId}`);\n      try {\n        await deleteLineItemProcess(lineItem.lineItemId, process.customId);\n        setLineItemProcesses(prev => prev.filter(item => item.customId !== process.customId));\n      } catch (err) {\n        console.error('Error removing process:', err);\n      }\n    };\n  \n    const handleEditExecution = async (e) => {\n      e.stopPropagation(); // ‚úÖ Prevent drag from triggering\n      e.preventDefault(); // ‚úÖ Prevent unintended behavior\n      console.log(`üü† Editing Execution for Process: ${process.customId}`);\n      try {\n        const executionDetails = await fetchExecutionDetailsForLineItem(lineItem.lineItemId);\n        const execution = executionDetails.find(exec => exec.processId === process.processId && exec.vendorId === process.vendorId);\n    \n        if (execution) {\n          setSelectedExecution(execution);\n        } else {\n          console.warn(\"‚ö†Ô∏è No execution details found for this process\");\n        }\n      } catch (error) {\n        console.error('Error fetching execution details:', error);\n      }\n    };\n  \n    const style = {\n      transform: CSS.Transform.toString(transform),\n      transition,\n      padding: '10px',\n      margin: '5px 0',\n      background: '#f8f8f8',\n      border: '1px solid #ddd',\n      borderRadius: '4px',\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n    };\n  \n    return (\n      <div ref={setNodeRef} style={style} {...attributes} {...listeners}>\n        <span>\n          Sequence: {process.sequence},\n          Process: {process.processId},\n          Vendor: {process.vendorId}\n        </span>\n        \n        {/* üî• Buttons Should Not Be Draggable */}\n        <div style={{ display: 'flex', gap: '10px' }}>\n          <button \n            onClick={handleEditExecution} \n            onMouseDown={(e) => e.stopPropagation()} // üëà Fix: Prevent drag on button\n            onTouchStart={(e) => e.stopPropagation()} // üëà Fix: Prevent touch drag\n            style={{ background: 'orange', color: 'white', cursor: 'pointer' }}\n          >\n            Edit\n          </button>\n          <button \n            onClick={handleRemove} \n            onMouseDown={(e) => e.stopPropagation()} \n            onTouchStart={(e) => e.stopPropagation()} \n            style={{ color: 'red', border: 'none', background: 'none', cursor: 'pointer' }}\n          >\n            Remove\n          </button>\n        </div>\n      </div>\n    );\n  };\n  \n  const handleDragEnd = (event) => {\n    if (!event || !event.active || !event.over) {\n      console.warn('handleDragEnd: Missing active or over:', event);\n      return;\n    }\n  \n    const { active, over } = event;\n    if (!active.id || !over.id) {\n      console.warn('handleDragEnd: Missing ID in active or over:', { active, over });\n      return;\n    }\n  \n    console.log(`handleDragEnd: Moving ${active.id} over ${over.id}`);\n  \n    setLineItemProcesses((items) => {\n      const oldIndex = items.findIndex((item) => item.customId === active.id);\n      const newIndex = items.findIndex((item) => item.customId === over.id);\n  \n      if (oldIndex === -1 || newIndex === -1) {\n        console.warn('handleDragEnd: Invalid indices:', { oldIndex, newIndex });\n        return items;\n      }\n  \n      const updatedItems = arrayMove(items, oldIndex, newIndex);\n  \n      return updatedItems.map((item, index) => ({\n        ...item,\n        sequence: index + 1,\n        customId: `${item.lineItemId}/${item.vendorId}/${item.processId}/${index + 1}`,\n      }));\n    });\n  };\n  \n\n  const handleAddProcess = async () => {\n    if (!newProcess.processId || !newProcess.vendorId) {\n      console.warn('editpopup: Please select both a process and a vendor before adding.');\n      return;\n    }\n  \n    try {\n      // Generate sequence number based on current processes count\n      const newSequence = lineItemProcesses.length + 1;\n  \n      // Create a unique custom ID\n      const newCustomId = `${lineItem.lineItemId}/${newProcess.vendorId}/${newProcess.processId}/${newSequence}`;\n  \n      // Check if the same process already exists\n      const isDuplicate = lineItemProcesses.some(item => item.customId === newCustomId);\n      if (isDuplicate) {\n        console.warn(`editpopup: Process with ID ${newCustomId} already exists.`);\n        return;\n      }\n  \n      const newEntry = {\n        lineItemId: lineItem.lineItemId,\n        processId: newProcess.processId,\n        vendorId: newProcess.vendorId,\n        sequence: newSequence,\n        customId: newCustomId,\n      };\n  \n      console.log('editpopup: Sending new process to backend:', newEntry);\n  \n      // Save to backend and capture response\n      const response = await createLineItemProcess(newEntry);\n  \n      if (!response || response.error) {\n        console.error('editpopup: Backend error:', response?.error || 'Unknown error');\n        return;\n      }\n  \n      console.log('editpopup: Process successfully added:', response);\n  \n      // Fetch latest processes instead of appending manually (prevents stale data issues)\n      const updatedProcesses = await fetchLineItemProcesses(encodeURIComponent(lineItem.lineItemId));\n  \n      // Update state with the newly fetched list\n      setLineItemProcesses(\n        updatedProcesses.map((process, index) => ({\n          ...process,\n          sequence: index + 1, // Ensure correct sequence\n          customId: `${process.lineItemId}/${process.vendorId}/${process.processId}/${index + 1}`,\n        }))\n      );\n  \n      console.log('editpopup: Updated lineItemProcesses after addition:', updatedProcesses);\n  \n      // Reset form input\n      setNewProcess({ processId: '', vendorId: '' });\n  \n    } catch (err) {\n      console.error('editpopup: Error adding new process:', err);\n    }\n  };\n  // **üìè Dynamic Popup Sizing**\n  const popupHeight = Math.min(300 + lineItemProcesses.length * 40, 600); // Max height 600px\n  const popupWidth = Math.min(400 + lineItemProcesses.length * 20, 800); // Max width 800px\n\n  const handleSave = async () => {\n    try {\n      const encodedLineItemId = encodeURIComponent(lineItem.lineItemId);\n      console.log(`editpopup: Encoded lineItemId for save: ${encodedLineItemId}`);\n  \n      // Extract unique processIds and vendorIds from lineItemProcesses\n      const updatedProcessIds = [...new Set(lineItemProcesses.map(p => p.processId))];\n      const updatedVendorIds = [...new Set(lineItemProcesses.map(p => p.vendorId))];\n  \n      console.log(\"Updated Process IDs:\", updatedProcessIds);\n      console.log(\"Updated Vendor IDs:\", updatedVendorIds);\n  \n      // Prepare the payload for saving reordered processes\n      const reorderedProcessesPayload = lineItemProcesses.map((process) => ({\n        customId: process.customId,\n        sequence: process.sequence,\n      }));\n  \n      console.log(\"Saving reordered processes:\", reorderedProcessesPayload);\n      await reorderLineItemProcesses(encodedLineItemId, reorderedProcessesPayload);\n      console.log(\"editpopup: Saved reordered processes successfully!\");\n  \n      // Fetch existing execution details to prevent duplicates\n      console.log(`editpopup: Saving execution details for lineItemId: ${lineItem.lineItemId}`);\n      const existingExecutions = await fetchExecutionDetailsForLineItem(lineItem.lineItemId);\n  \n      const newExecutions = lineItemProcesses.map((process) => {\n        const executionExists = existingExecutions.some(exec =>\n          exec.processId === process.processId &&\n          exec.vendorId === process.vendorId &&\n          exec.lineItemId === lineItem.lineItemId\n        );\n  \n        if (!executionExists) {\n          return {\n            lineItemId: lineItem.lineItemId,\n            orderId: lineItem.orderId,\n            processId: process.processId,\n            vendorId: process.vendorId,\n            outWeight: lineItem.weight || 0,\n            inWeight: 0,\n            dateSent: new Date().toISOString().split('T')[0],\n            dateReceived: null,\n            piecesSent: process.piecesSent !== undefined ? process.piecesSent : 1,\n            piecesReceived: 0,\n            status: 'Pending',\n            dateCreated: new Date().toISOString(),\n          };\n        }\n        return null;\n      }).filter(Boolean);\n  \n      for (const execution of newExecutions) {\n        console.log(\"‚úÖ Sending Execution:\", execution);\n        await addExecutionDetails(execution);\n      }\n  \n      // Update the parent component with new processIds and vendorIds\n      onSave({\n        ...lineItem,\n        processIds: updatedProcessIds,\n        vendorIds: updatedVendorIds,\n      });\n  \n      onClose();\n    } catch (err) {\n      console.error(\"editpopup: Error saving processes:\", err.message);\n    }\n  };\n  \n  const handleExecutionSave = (updatedExecution) => {\n    setLineItemProcesses(prev =>\n      prev.map(process =>\n        process.processId === updatedExecution.processId && process.vendorId === updatedExecution.vendorId\n          ? { ...process, ...updatedExecution }\n          : process\n      )\n    );\n    setSelectedExecution(null);\n  };\n  \n  return (\n    <div className=\"popup\">\n      <div className=\"popup-overlay\">\n      <div\n        className=\"popup-content\"\n        style={{\n          width: `${popupWidth}px`,  // Dynamic width\n          height: `${popupHeight}px`, // Dynamic height\n          overflowY: \"auto\", // Scroll if too large\n        }}\n      >\n        <h2>Edit Line Item</h2>\n\n        <DndContext\n          sensors={sensors}\n          collisionDetection={closestCenter}\n          onDragEnd={handleDragEnd}\n        >\n          <SortableContext\n            items={lineItemProcesses.map(process => process.customId)}\n            strategy={verticalListSortingStrategy}\n          >\n            {lineItemProcesses.map((process) => {\n              const id = process.customId;\n              const validProcess = process && id;\n\n              return validProcess ? (\n                <SortableItem\n                  key={id}\n                  id={id}\n                  process={process} // Pass the entire process object\n                />\n              ) : null;\n            })}\n          </SortableContext>\n        </DndContext>\n\n        <div style={{ marginTop: '20px' }}>\n          <h3>Add New Process</h3>\n          <select\n            value={newProcess.processId}\n            onChange={(e) => setNewProcess((prev) => ({ ...prev, processId: e.target.value }))}\n            style={{ marginRight: '10px' }}\n          >\n            <option value=\"\">Select Process</option>\n            {filteredProcesses.map((process) => (\n              <option key={process.processId} value={process.processId}>\n                {process.processId}\n              </option>\n            ))}\n          </select>\n          <select\n            value={newProcess.vendorId}\n            onChange={(e) => setNewProcess((prev) => ({ ...prev, vendorId: e.target.value }))}\n            style={{ marginRight: '10px' }}\n          >\n            <option value=\"\">Select Vendor</option>\n            {filteredVendors.map((vendor) => (\n              <option key={vendor.vendorId} value={vendor.vendorId}>\n                {vendor.vendorId}\n              </option>\n            ))}\n          </select>\n          <button onClick={handleAddProcess} style={{ padding: '5px 10px', background: 'blue', color: 'white' }}>\n            Add\n          </button>\n        </div>\n\n        <div style={{ marginTop: '20px' }}>\n          <button onClick={handleSave} style={{ padding: '5px 10px', background: 'green', color: 'white' }}>\n            Save\n          </button>\n          <button onClick={onClose} style={{ padding: '5px 10px', background: 'red', color: 'white' }}>\n            Cancel\n          </button>\n        </div>\n      </div>\n    </div>\n    {selectedExecution && <ExecutionEditPopup execution={selectedExecution} onClose={() => setSelectedExecution(null)} onSave={handleExecutionSave} />}\n\n    </div>\n  );\n};\n\nexport default EditPopup;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}