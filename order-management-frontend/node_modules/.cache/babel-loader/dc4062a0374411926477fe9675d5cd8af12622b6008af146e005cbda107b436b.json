{"ast":null,"code":"var _jsxFileName = \"/Users/nshah/GPT Project/order-management-frontend/src/pages/OrderDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport Select from 'react-select';\nimport axios from 'axios';\nimport { fetchOrder, fetchLineItems, fetchProcesses, fetchVendors, fetchShapes, fetchGrades, createLineItem } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OrderDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [order, setOrder] = useState(null);\n  const [lineItems, setLineItems] = useState([]);\n  const [nextLineItemId, setNextLineItemId] = useState(''); // Next available lineItemId\n  const [processes, setProcesses] = useState([]);\n  const [vendors, setVendors] = useState([]);\n  const [shapes, setShapes] = useState([]);\n  const [grades, setGrades] = useState([]);\n  const allPossibleDimensions = ['length', 'breadth', 'thickness', 'diameter'];\n  const shapeDimensionMap = {\n    'sheet': ['length', 'breadth', 'thickness'],\n    'round bar': ['diameter', 'length'],\n    'square bar': ['thickness', 'length'],\n    'hexagon bar': ['thickness', 'length'],\n    'flat bar': ['length', 'breadth', 'thickness']\n  };\n  const [newLineItem, setNewLineItem] = useState({\n    shape: '',\n    grade: '',\n    dimensions: {\n      length: '',\n      breadth: '',\n      thickness: '',\n      diameter: ''\n    },\n    quantity: '',\n    weight: '',\n    processIds: [],\n    vendorIds: []\n  });\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    const loadOrderData = async () => {\n      try {\n        const orderData = await fetchOrder(id);\n        console.log('Fetched Order:', orderData);\n        setOrder(orderData);\n        const lineItemData = await fetchLineItems(id);\n        console.log('Fetched Line Items:', lineItemData);\n        setLineItems(lineItemData);\n        const {\n          data\n        } = await axios.get(`http://localhost:5045/api/lineitems/nextLineItemId/${id}`);\n        setNextLineItemId(data.nextLineItemId);\n      } catch (err) {\n        console.error('Error fetching data:', err.message);\n        setMessage('Failed to load data.');\n      }\n    };\n    loadOrderData();\n  }, [id]);\n  const fetchShapesOnClick = async () => {\n    if (shapes.length > 0) return;\n    try {\n      const shapeData = await fetchShapes();\n      setShapes(shapeData);\n    } catch (err) {\n      console.error('Error fetching shapes:', err.message);\n    }\n  };\n  const fetchGradesOnClick = async () => {\n    if (grades.length > 0) return;\n    try {\n      const gradeData = await fetchGrades();\n      setGrades(gradeData);\n    } catch (err) {\n      console.error('Error fetching grades:', err.message);\n    }\n  };\n  const fetchVendorsOnClick = async () => {\n    if (vendors.length > 0) return;\n    try {\n      const vendorData = await fetchVendors();\n      setVendors(vendorData);\n    } catch (err) {\n      console.error('Error fetching vendors:', err.message);\n    }\n  };\n  const fetchProcessesOnClick = async () => {\n    if (processes.length > 0) return;\n    try {\n      const processData = await fetchProcesses();\n      setProcesses(processData);\n    } catch (err) {\n      console.error('Error fetching processes:', err.message);\n    }\n  };\n  const handleDropdownChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewLineItem(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate and log the dimensions\n    const {\n      dimensions\n    } = newLineItem;\n    console.log('Submitting Dimensions:', dimensions);\n    const updatedDimensions = {};\n    allPossibleDimensions.forEach(dimension => {\n      updatedDimensions[dimension] = dimensions[dimension] || null;\n    });\n    // Check if all dimensions are numbers or null\n    const allValid = Object.values(dimensions).every(value => value === null || typeof value === 'number');\n    if (!allValid) {\n      console.error('Invalid dimensions:', dimensions);\n      setMessage('Please provide valid numeric dimensions.');\n      return;\n    }\n    console.log('Submitting Line Item:', {\n      ...newLineItem,\n      orderId: id,\n      lineItemId: nextLineItemId,\n      dimensions: updatedDimensions\n    });\n    try {\n      const response = await createLineItem({\n        ...newLineItem,\n        orderId: id,\n        lineItemId: nextLineItemId\n      });\n      console.log('Line Item Created:', response);\n      setMessage('Line item added successfully!');\n      setLineItems(prev => Array.isArray(prev) ? [...prev, response] : [response]);\n      setNewLineItem({\n        shape: '',\n        grade: '',\n        dimensions: {\n          length: updatedDimensions.length,\n          breadth: updatedDimensions.breadth,\n          thickness: updatedDimensions.thickness,\n          diameter: updatedDimensions.diameter\n        },\n        quantity: '',\n        weight: '',\n        processIds: [],\n        vendorIds: []\n      });\n\n      // Fetch next lineItemId for subsequent additions\n      const {\n        data\n      } = await axios.get(`http://localhost:5045/api/lineitems/nextLineItemId/${id}`);\n      setNextLineItemId(data.nextLineItemId);\n    } catch (err) {\n      var _err$response;\n      console.error('Failed to add line item:', ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      setMessage('Failed to add line item.');\n    }\n  };\n  const handleShapeChange = e => {\n    const selectedShape = e.target.value;\n    console.log('Shape selected:', selectedShape);\n    setNewLineItem(prev => ({\n      ...prev,\n      shape: selectedShape,\n      dimensions: {} // Reset dimensions for the new shape\n    }));\n  };\n  const renderDimensionFields = () => {\n    const selectedShape = newLineItem.shape;\n    const dimensionsToRender = shapeDimensionMap[selectedShape] || [];\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: dimensionsToRender.map(dimension => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: dimension,\n        placeholder: dimension.charAt(0).toUpperCase() + dimension.slice(1),\n        value: newLineItem.dimensions[dimension] || '',\n        onChange: e => setNewLineItem(prev => ({\n          ...prev,\n          dimensions: {\n            ...prev.dimensions,\n            [dimension]: parseFloat(e.target.value) || null\n          }\n        })),\n        required: true\n      }, dimension, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this))\n    }, void 0, false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Order Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), order && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Order ID: \", order.orderId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Creator: \", order.creator]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New Line Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lineItemId\",\n          children: \"Next Line Item ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"lineItemId\",\n          value: nextLineItemId,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"shape\",\n        value: newLineItem.shape,\n        onChange: handleShapeChange,\n        onClick: fetchShapesOnClick,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Shape\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), Array.isArray(shapes) && shapes.length > 0 ? shapes.map(shape => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: shape.shapeId,\n          children: shape.shapeId\n        }, shape._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          children: \"No shapes available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"grade\",\n        value: newLineItem.grade,\n        onChange: handleDropdownChange,\n        onClick: fetchGradesOnClick,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Grade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), Array.isArray(grades) && grades.length > 0 ? grades.map(grade => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: grade.grade,\n          children: grade.grade\n        }, grade._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          children: \"No grades available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), renderDimensionFields(), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Quantity\",\n        value: newLineItem.quantity,\n        onChange: e => setNewLineItem(prev => ({\n          ...prev,\n          quantity: e.target.value\n        })),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Weight\",\n        value: newLineItem.weight,\n        onChange: e => setNewLineItem(prev => ({\n          ...prev,\n          weight: e.target.value\n        })),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"processId\",\n        value: newLineItem.processId,\n        onChange: handleDropdownChange,\n        onClick: fetchProcessesOnClick,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Process\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), Array.isArray(processes) && processes.length > 0 ? processes.map(process => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: process.processId,\n          children: process.processId\n        }, process._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          children: \"No processes available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"vendorId\",\n        value: newLineItem.vendorId,\n        onChange: handleDropdownChange,\n        onClick: fetchVendorsOnClick,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Vendor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), Array.isArray(vendors) && vendors.length > 0 ? vendors.map(vendor => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: vendor.vendorId,\n          children: vendor.vendorId\n        }, vendor._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          children: \"No vendors available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Line Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Existing Line Items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Array.isArray(lineItems) && lineItems.length > 0 ? lineItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.lineItemId\n      }, item.lineItemId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No line items available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderDetails, \"jsiuEKxk5/co9t+A4Wr7T5XWfgM=\", false, function () {\n  return [useParams];\n});\n_c = OrderDetails;\nexport default OrderDetails;\nvar _c;\n$RefreshReg$(_c, \"OrderDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","Select","axios","fetchOrder","fetchLineItems","fetchProcesses","fetchVendors","fetchShapes","fetchGrades","createLineItem","jsxDEV","_jsxDEV","Fragment","_Fragment","OrderDetails","_s","id","order","setOrder","lineItems","setLineItems","nextLineItemId","setNextLineItemId","processes","setProcesses","vendors","setVendors","shapes","setShapes","grades","setGrades","allPossibleDimensions","shapeDimensionMap","newLineItem","setNewLineItem","shape","grade","dimensions","length","breadth","thickness","diameter","quantity","weight","processIds","vendorIds","message","setMessage","loadOrderData","orderData","console","log","lineItemData","data","get","err","error","fetchShapesOnClick","shapeData","fetchGradesOnClick","gradeData","fetchVendorsOnClick","vendorData","fetchProcessesOnClick","processData","handleDropdownChange","e","name","value","target","prev","handleSubmit","preventDefault","updatedDimensions","forEach","dimension","allValid","Object","values","every","orderId","lineItemId","response","Array","isArray","_err$response","handleShapeChange","selectedShape","renderDimensionFields","dimensionsToRender","children","map","type","placeholder","charAt","toUpperCase","slice","onChange","parseFloat","required","fileName","_jsxFileName","lineNumber","columnNumber","creator","onSubmit","htmlFor","readOnly","onClick","shapeId","_id","disabled","processId","process","vendorId","vendor","item","_c","$RefreshReg$"],"sources":["/Users/nshah/GPT Project/order-management-frontend/src/pages/OrderDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport Select from 'react-select';\nimport axios from 'axios';\nimport {\n  fetchOrder,\n  fetchLineItems,\n  fetchProcesses,\n  fetchVendors,\n  fetchShapes,\n  fetchGrades,\n  createLineItem,\n} from '../services/api';\n\nconst OrderDetails = () => {\n  const { id } = useParams();\n  const [order, setOrder] = useState(null);\n  const [lineItems, setLineItems] = useState([]);\n  const [nextLineItemId, setNextLineItemId] = useState(''); // Next available lineItemId\n  const [processes, setProcesses] = useState([]);\n  const [vendors, setVendors] = useState([]);\n  const [shapes, setShapes] = useState([]);\n  const [grades, setGrades] = useState([]);\n  const allPossibleDimensions = ['length', 'breadth', 'thickness', 'diameter'];\n\n  const shapeDimensionMap = {\n    'sheet': ['length', 'breadth', 'thickness'],\n    'round bar': ['diameter', 'length'],\n    'square bar': ['thickness', 'length'],\n    'hexagon bar': ['thickness', 'length'],\n    'flat bar': ['length', 'breadth', 'thickness'],\n  };\n  const [newLineItem, setNewLineItem] = useState({\n    shape: '',\n    grade: '',\n    dimensions: { length: '', breadth: '', thickness: '', diameter: '' },\n    quantity: '',\n    weight: '',\n    processIds: [],\n    vendorIds: [],\n  });\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    const loadOrderData = async () => {\n      try {\n        const orderData = await fetchOrder(id);\n        console.log('Fetched Order:', orderData);\n        setOrder(orderData);\n\n        const lineItemData = await fetchLineItems(id);\n        console.log('Fetched Line Items:', lineItemData);\n        setLineItems(lineItemData);\n\n        const { data } = await axios.get(`http://localhost:5045/api/lineitems/nextLineItemId/${id}`);\n        setNextLineItemId(data.nextLineItemId);\n      } catch (err) {\n        console.error('Error fetching data:', err.message);\n        setMessage('Failed to load data.');\n      }\n    };\n    loadOrderData();\n  }, [id]);\n\n  const fetchShapesOnClick = async () => {\n    if (shapes.length > 0) return;\n    try {\n      const shapeData = await fetchShapes();\n      setShapes(shapeData);\n    } catch (err) {\n      console.error('Error fetching shapes:', err.message);\n    }\n  };\n\n  const fetchGradesOnClick = async () => {\n    if (grades.length > 0) return;\n    try {\n      const gradeData = await fetchGrades();\n      setGrades(gradeData);\n    } catch (err) {\n      console.error('Error fetching grades:', err.message);\n    }\n  };\n\n  const fetchVendorsOnClick = async () => {\n    if (vendors.length > 0) return;\n    try {\n      const vendorData = await fetchVendors();\n      setVendors(vendorData);\n    } catch (err) {\n      console.error('Error fetching vendors:', err.message);\n    }\n  };\n\n  const fetchProcessesOnClick = async () => {\n    if (processes.length > 0) return;\n    try {\n      const processData = await fetchProcesses();\n      setProcesses(processData);\n    } catch (err) {\n      console.error('Error fetching processes:', err.message);\n    }\n  };\n\n  const handleDropdownChange = (e) => {\n    const { name, value } = e.target;\n    setNewLineItem((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n  \n    // Validate and log the dimensions\n    const { dimensions } = newLineItem;\n    console.log('Submitting Dimensions:', dimensions);\n    const updatedDimensions = {};\n    allPossibleDimensions.forEach((dimension) => {\n      updatedDimensions[dimension] = dimensions[dimension] || null;\n    });\n    // Check if all dimensions are numbers or null\n    const allValid = Object.values(dimensions).every(\n      (value) => value === null || typeof value === 'number'\n    );\n  \n    if (!allValid) {\n      console.error('Invalid dimensions:', dimensions);\n      setMessage('Please provide valid numeric dimensions.');\n      return;\n    }\n  \n    console.log('Submitting Line Item:', { ...newLineItem, orderId: id, lineItemId: nextLineItemId,dimensions:updatedDimensions });\n  \n    try {\n      const response = await createLineItem({ ...newLineItem, orderId: id, lineItemId: nextLineItemId });\n      console.log('Line Item Created:', response);\n  \n      setMessage('Line item added successfully!');\n      setLineItems((prev) => (Array.isArray(prev) ? [...prev, response] : [response]));\n      setNewLineItem({\n        shape: '',\n        grade: '',\n        dimensions: { length: updatedDimensions.length, breadth: updatedDimensions.breadth, thickness: updatedDimensions.thickness, diameter: updatedDimensions.diameter },\n        quantity: '',\n        weight: '',\n        processIds: [],\n        vendorIds: [],\n      });\n  \n      // Fetch next lineItemId for subsequent additions\n      const { data } = await axios.get(`http://localhost:5045/api/lineitems/nextLineItemId/${id}`);\n      setNextLineItemId(data.nextLineItemId);\n    } catch (err) {\n      console.error('Failed to add line item:', err.response?.data || err.message);\n      setMessage('Failed to add line item.');\n    }\n  };\n\n\n  const handleShapeChange = (e) => {\n    const selectedShape = e.target.value;\n    console.log('Shape selected:', selectedShape);\n    setNewLineItem((prev) => ({\n      ...prev,\n      shape: selectedShape,\n      dimensions: {}, // Reset dimensions for the new shape\n    }));\n  };\n\n  const renderDimensionFields = () => {\n    const selectedShape = newLineItem.shape;\n    const dimensionsToRender = shapeDimensionMap[selectedShape] || [];\n\n    return (\n      <>\n        {dimensionsToRender.map((dimension) => (\n          <input\n            key={dimension}\n            type=\"number\"\n            name={dimension}\n            placeholder={dimension.charAt(0).toUpperCase() + dimension.slice(1)}\n            value={newLineItem.dimensions[dimension] || ''}\n            onChange={(e) =>\n              setNewLineItem((prev) => ({\n                ...prev,\n                dimensions: {\n                  ...prev.dimensions,\n                  [dimension]: parseFloat(e.target.value) || null,\n                },\n              }))\n            }\n            required\n          />\n        ))}\n      </>\n    );\n  };\n\n  return (\n    <div>\n      <h1>Order Details</h1>\n      {order && (\n        <div>\n          <p>Order ID: {order.orderId}</p>\n          <p>Creator: {order.creator}</p>\n        </div>\n      )}\n\n      <h2>Add New Line Item</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"lineItemId\">Next Line Item ID:</label>\n          <input type=\"text\" id=\"lineItemId\" value={nextLineItemId} readOnly />\n        </div>\n\n        {/* Shape Selection */}\n        <select\n          name=\"shape\"\n          value={newLineItem.shape}\n          onChange={handleShapeChange}\n          onClick={fetchShapesOnClick}\n        >\n          <option value=\"\">Select Shape</option>\n          {Array.isArray(shapes) && shapes.length > 0 ? (\n            shapes.map((shape) => (\n              <option key={shape._id} value={shape.shapeId}>\n                {shape.shapeId}\n              </option>\n            ))\n          ) : (\n            <option disabled>No shapes available</option>\n          )}\n        </select>\n\n        <select\n          name=\"grade\"\n          value={newLineItem.grade}\n          onChange={handleDropdownChange}\n          onClick={fetchGradesOnClick}\n        >\n          <option value=\"\">Select Grade</option>\n          {Array.isArray(grades) && grades.length > 0 ? (\n            grades.map((grade) => (\n              <option key={grade._id} value={grade.grade}>\n                {grade.grade}\n              </option>\n            ))\n          ) : (\n            <option disabled>No grades available</option>\n          )}\n        </select>\n\n        {/* Dynamic Dimension Fields */}\n        {renderDimensionFields()}\n\n        <input\n          type=\"number\"\n          placeholder=\"Quantity\"\n          value={newLineItem.quantity}\n          onChange={(e) =>\n            setNewLineItem((prev) => ({ ...prev, quantity: e.target.value }))\n          }\n          required\n        />\n\n        <input\n          type=\"number\"\n          placeholder=\"Weight\"\n          value={newLineItem.weight}\n          onChange={(e) =>\n            setNewLineItem((prev) => ({ ...prev, weight: e.target.value }))\n          }\n          required\n        />\n\n        <select\n          name=\"processId\"\n          value={newLineItem.processId}\n          onChange={handleDropdownChange}\n          onClick={fetchProcessesOnClick}\n        >\n          <option value=\"\">Select Process</option>\n          {Array.isArray(processes) && processes.length > 0 ? (\n            processes.map((process) => (\n              <option key={process._id} value={process.processId}>\n                {process.processId}\n              </option>\n            ))\n          ) : (\n            <option disabled>No processes available</option>\n          )}\n        </select>\n\n        <select\n          name=\"vendorId\"\n          value={newLineItem.vendorId}\n          onChange={handleDropdownChange}\n          onClick={fetchVendorsOnClick}\n        >\n          <option value=\"\">Select Vendor</option>\n          {Array.isArray(vendors) && vendors.length > 0 ? (\n            vendors.map((vendor) => (\n              <option key={vendor._id} value={vendor.vendorId}>\n                {vendor.vendorId}\n              </option>\n            ))\n          ) : (\n            <option disabled>No vendors available</option>\n          )}\n        </select>\n\n        <button type=\"submit\">Add Line Item</button>\n      </form>\n      {message && <p>{message}</p>}\n\n      <h2>Existing Line Items</h2>\n      <ul>\n        {Array.isArray(lineItems) && lineItems.length > 0 ? (\n          lineItems.map((item) => (\n            <li key={item.lineItemId}>{item.lineItemId}</li>\n          ))\n        ) : (\n          <li>No line items available</li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default OrderDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}