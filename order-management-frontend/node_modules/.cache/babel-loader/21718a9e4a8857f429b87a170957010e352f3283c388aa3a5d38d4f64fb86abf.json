{"ast":null,"code":"var _jsxFileName = \"/Users/nshah/GPT Project/order-management-frontend/src/pages/LineItemDetailPopup.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchLineItemDetails } from '../services/api'; // API to fetch line item details\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineItemDetailsPage = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Get lineItemId from URL\n  const [lineItem, setLineItem] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const loadLineItemDetails = async () => {\n      try {\n        const data = await fetchLineItemDetails(id); // Fetch from API\n        setLineItem(data);\n      } catch (error) {\n        console.error('Error fetching line item details:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadLineItemDetails();\n  }, [id]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading material size details...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 23\n  }, this);\n  if (!lineItem) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"No details found for Line Item \", id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Material Sizes for Line Item: \", lineItem.lineItemId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Material Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Weight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: lineItem.materialSizes.map((material, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: material.size\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: material.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [material.weight, \" kg\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(LineItemDetailsPage, \"VAgQfibWYDUXMv81FE+KBY2uHas=\", false, function () {\n  return [useParams];\n});\n_c = LineItemDetailsPage;\nexport default LineItemDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"LineItemDetailsPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","fetchLineItemDetails","jsxDEV","_jsxDEV","LineItemDetailsPage","_s","id","lineItem","setLineItem","loading","setLoading","loadLineItemDetails","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","lineItemId","border","materialSizes","map","material","index","size","status","weight","_c","$RefreshReg$"],"sources":["/Users/nshah/GPT Project/order-management-frontend/src/pages/LineItemDetailPopup.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchLineItemDetails } from '../services/api'; // API to fetch line item details\n\nconst LineItemDetailsPage = () => {\n  const { id } = useParams(); // Get lineItemId from URL\n  const [lineItem, setLineItem] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const loadLineItemDetails = async () => {\n      try {\n        const data = await fetchLineItemDetails(id); // Fetch from API\n        setLineItem(data);\n      } catch (error) {\n        console.error('Error fetching line item details:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadLineItemDetails();\n  }, [id]);\n\n  if (loading) return <p>Loading material size details...</p>;\n  if (!lineItem) return <p>No details found for Line Item {id}</p>;\n\n  return (\n    <div className=\"container\">\n      <h2>Material Sizes for Line Item: {lineItem.lineItemId}</h2>\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <th>Material Size</th>\n            <th>Status</th>\n            <th>Weight</th>\n          </tr>\n        </thead>\n        <tbody>\n          {lineItem.materialSizes.map((material, index) => (\n            <tr key={index}>\n              <td>{material.size}</td>\n              <td>{material.status}</td>\n              <td>{material.weight} kg</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default LineItemDetailsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}