{"ast":null,"code":"var _jsxFileName = \"/Users/nshah/GPT Project/order-management-frontend/src/pages/EditPopup.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchVendors, fetchProcesses, fetchLineItemProcesses, reorderLineItemProcesses, createLineItemProcess, deleteLineItemProcess } from '../services/api';\nimport { DndContext, closestCenter } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, useSortable, sortableKeyboardCoordinates } from '@dnd-kit/sortable';\nimport { KeyboardSensor, PointerSensor, useSensor, useSensors } from '@dnd-kit/core';\nimport { CSS } from '@dnd-kit/utilities';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPopup = ({\n  lineItem,\n  onClose,\n  onSave\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [vendors, setVendors] = useState([]); // Vendor list\n  const [processes, setProcesses] = useState([]); // Process list\n  const [lineItemProcesses, setLineItemProcesses] = useState([]); // Existing LineItemProcesses\n  const [newProcess, setNewProcess] = useState({\n    processId: '',\n    vendorId: ''\n  });\n  const [draggedProcess, setDraggedProcess] = useState(null);\n  useEffect(() => {\n    // Fetch initial data for vendors, processes, and line item processes\n    const loadInitialData = async () => {\n      try {\n        const encodedLineItemId = encodeURIComponent(lineItem.lineItemId); // Encode lineItemId\n        console.log('editpopup: Encoded lineItemId:', encodedLineItemId);\n\n        // Fetch vendors\n        const vendorData = await fetchVendors();\n        console.log('editpopup: Fetched vendors:', vendorData);\n        setVendors(vendorData);\n\n        // Fetch processes\n        const processData = await fetchProcesses();\n        console.log('editpopup: Fetched processes:', processData);\n        setProcesses(processData);\n\n        // Fetch line item processes\n        const lineItemProcessData = await fetchLineItemProcesses(encodedLineItemId);\n        console.log('editpopup: Fetched line item processes:', lineItemProcessData);\n        setLineItemProcesses(lineItemProcessData.map((process, index) => ({\n          ...process,\n          _id: process._id || `temp-${Math.random()}`\n        })));\n      } catch (err) {\n        console.error('editpopup: Error loading initial data:', err.message);\n      }\n    };\n    if (lineItem.lineItemId) {\n      loadInitialData(); // Fetch data if lineItemId is available\n    }\n  }, [lineItem.lineItemId]);\n\n  // Sensors for drag-and-drop\n  const sensors = useSensors(useSensor(PointerSensor), useSensor(KeyboardSensor, {\n    coordinateGetter: sortableKeyboardCoordinates\n  }));\n\n  // Sortable item component\n  const SortableItem = ({\n    id,\n    process\n  }) => {\n    _s();\n    const {\n      attributes,\n      listeners,\n      setNodeRef,\n      transform,\n      transition\n    } = useSortable({\n      id: id // Ensure we're using the correct ID\n    });\n    const handleRemove = async e => {\n      e.stopPropagation(); // Prevent drag event from triggering\n      try {\n        console.log('Removing process with ID:', id);\n        await deleteLineItemProcess(lineItem.lineItemId, id); // Pass both IDs\n        setLineItemProcesses(prev => prev.filter(item => item._id !== id));\n      } catch (err) {\n        console.error('Error removing process:', err);\n      }\n    };\n    const style = {\n      transform: CSS.Transform.toString(transform),\n      transition,\n      padding: '10px',\n      margin: '5px 0',\n      background: '#f8f8f8',\n      border: '1px solid #ddd',\n      borderRadius: '4px',\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: setNodeRef,\n      style: style,\n      ...attributes,\n      ...listeners,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Sequence: \", process.sequence, \", Process: \", process.processId, \", Vendor: \", process.vendorId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRemove,\n        style: {\n          marginLeft: '10px',\n          color: 'red',\n          border: 'none',\n          background: 'none',\n          cursor: 'pointer'\n        },\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  };\n  _s(SortableItem, \"FTUh0JV0KNM2MI3tYtLrQh0rr1U=\", false, function () {\n    return [useSortable];\n  });\n  const handleDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n\n    // Ensure both active and over are defined\n    if (!active || !over) {\n      console.warn('Drag event missing active or over:', {\n        active,\n        over\n      });\n      return;\n    }\n\n    // Check if active and over have valid IDs\n    if (!active.id || !over.id) {\n      console.warn('Active or Over missing ID:', {\n        active,\n        over\n      });\n      return;\n    }\n    if (active.id !== over.id) {\n      setLineItemProcesses(items => {\n        const oldIndex = items.findIndex(item => item._id === active.id);\n        const newIndex = items.findIndex(item => item._id === over.id);\n        if (oldIndex === -1 || newIndex === -1) {\n          console.warn('Invalid indices during drag-and-drop:', {\n            oldIndex,\n            newIndex\n          });\n          return items;\n        }\n        const updatedItems = arrayMove(items, oldIndex, newIndex);\n\n        // Update sequence numbers after reordering\n        return updatedItems.map((item, index) => ({\n          ...item,\n          sequence: index + 1\n        }));\n      });\n    }\n  };\n  const handleAddProcess = async () => {\n    if (newProcess.processId && newProcess.vendorId) {\n      const newEntry = {\n        lineItemId: lineItem.lineItemId,\n        // Pass the lineItemId for association\n        processId: newProcess.processId,\n        vendorId: newProcess.vendorId,\n        sequence: lineItemProcesses.length + 1\n      };\n      console.log('editpopup: New process to add:', newEntry);\n      try {\n        await createLineItemProcess(newEntry); // Save to backend\n        console.log('editpopup: Added new process');\n\n        // Refetch processes to ensure data is consistent\n        const updatedProcesses = await fetchLineItemProcesses(encodeURIComponent(lineItem.lineItemId));\n        setLineItemProcesses(updatedProcesses.map((process, index) => ({\n          ...process,\n          _id: process._id || `process-${index}`\n        })));\n        setNewProcess({\n          processId: '',\n          vendorId: ''\n        }); // Reset the input fields\n      } catch (err) {\n        console.error('editpopup: Error adding new process:', err.message);\n      }\n    }\n  };\n  const handleSave = async () => {\n    try {\n      const encodedLineItemId = encodeURIComponent(lineItem.lineItemId); // Encode lineItemId\n      console.log(`editpopup: Encoded lineItemId for save: ${encodedLineItemId}`);\n\n      // Save reordered processes to backend\n      const reorderedProcessesPayload = lineItemProcesses.map(process => ({\n        lineItemProcessId: process._id,\n        // Ensure this matches the backend field\n        sequence: process.sequence\n      }));\n      await reorderLineItemProcesses(encodedLineItemId, reorderedProcessesPayload);\n      console.log('editpopup: Saved reordered processes:', lineItemProcesses);\n\n      // Refetch updated processes to ensure the latest data is shown\n      const updatedProcesses = await fetchLineItemProcesses(encodedLineItemId);\n      setLineItemProcesses(updatedProcesses.map((process, index) => ({\n        ...process,\n        _id: process._id || `process-${index}`\n      })));\n      const processIds = updatedProcesses.map(item => item.processId);\n      const vendorIds = updatedProcesses.map(item => item.vendorId);\n      console.log('Saving with:', {\n        processIds,\n        vendorIds,\n        lineItemProcesses\n      });\n      onSave({\n        ...lineItem,\n        processIds,\n        vendorIds,\n        lineItemProcesses: updatedProcesses\n      });\n    } catch (err) {\n      console.error('editpopup: Error saving processes:', err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Line Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DndContext, {\n        sensors: sensors,\n        collisionDetection: closestCenter,\n        onDragEnd: handleDragEnd,\n        children: /*#__PURE__*/_jsxDEV(SortableContext, {\n          items: lineItemProcesses.map(process => process._id),\n          strategy: verticalListSortingStrategy,\n          children: lineItemProcesses.map(process => /*#__PURE__*/_jsxDEV(SortableItem, {\n            id: process._id,\n            process: process\n          }, process._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 5\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add New Process\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newProcess.processId,\n          onChange: e => setNewProcess(prev => ({\n            ...prev,\n            processId: e.target.value\n          })),\n          style: {\n            marginRight: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Process\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), processes.map(process => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: process.processId,\n            children: process.processId\n          }, process.processId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newProcess.vendorId,\n          onChange: e => setNewProcess(prev => ({\n            ...prev,\n            vendorId: e.target.value\n          })),\n          style: {\n            marginRight: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Vendor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), vendors.map(vendor => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: vendor.vendorId,\n            children: vendor.vendorId\n          }, vendor.vendorId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddProcess,\n          style: {\n            padding: '5px 10px',\n            background: 'blue',\n            color: 'white'\n          },\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          style: {\n            padding: '5px 10px',\n            background: 'green',\n            color: 'white'\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          style: {\n            padding: '5px 10px',\n            background: 'red',\n            color: 'white'\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n};\n_s2(EditPopup, \"W+PxwCVPXgz2174vp/rBwsL3Xr0=\", false, function () {\n  return [useSensors, useSensor, useSensor];\n});\n_c = EditPopup;\nexport default EditPopup;\nvar _c;\n$RefreshReg$(_c, \"EditPopup\");","map":{"version":3,"names":["React","useState","useEffect","fetchVendors","fetchProcesses","fetchLineItemProcesses","reorderLineItemProcesses","createLineItemProcess","deleteLineItemProcess","DndContext","closestCenter","arrayMove","SortableContext","useSortable","sortableKeyboardCoordinates","KeyboardSensor","PointerSensor","useSensor","useSensors","CSS","jsxDEV","_jsxDEV","EditPopup","lineItem","onClose","onSave","_s2","_s","$RefreshSig$","vendors","setVendors","processes","setProcesses","lineItemProcesses","setLineItemProcesses","newProcess","setNewProcess","processId","vendorId","draggedProcess","setDraggedProcess","loadInitialData","encodedLineItemId","encodeURIComponent","lineItemId","console","log","vendorData","processData","lineItemProcessData","map","process","index","_id","Math","random","err","error","message","sensors","coordinateGetter","SortableItem","id","attributes","listeners","setNodeRef","transform","transition","handleRemove","e","stopPropagation","prev","filter","item","style","Transform","toString","padding","margin","background","border","borderRadius","display","justifyContent","alignItems","ref","children","sequence","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginLeft","color","cursor","handleDragEnd","event","active","over","warn","items","oldIndex","findIndex","newIndex","updatedItems","handleAddProcess","newEntry","length","updatedProcesses","handleSave","reorderedProcessesPayload","lineItemProcessId","processIds","vendorIds","className","collisionDetection","onDragEnd","strategy","verticalListSortingStrategy","marginTop","value","onChange","target","marginRight","vendor","_c","$RefreshReg$"],"sources":["/Users/nshah/GPT Project/order-management-frontend/src/pages/EditPopup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchVendors, fetchProcesses, fetchLineItemProcesses, reorderLineItemProcesses, createLineItemProcess,deleteLineItemProcess } from '../services/api';\nimport { DndContext, closestCenter } from '@dnd-kit/core';\nimport {\n  arrayMove,\n  SortableContext,\n  useSortable,\n  sortableKeyboardCoordinates,\n} from '@dnd-kit/sortable';\nimport { KeyboardSensor, PointerSensor, useSensor, useSensors } from '@dnd-kit/core';\nimport { CSS } from '@dnd-kit/utilities';\n\nconst EditPopup = ({ lineItem, onClose, onSave }) => {\n  const [vendors, setVendors] = useState([]); // Vendor list\n  const [processes, setProcesses] = useState([]); // Process list\n  const [lineItemProcesses, setLineItemProcesses] = useState([]); // Existing LineItemProcesses\n  const [newProcess, setNewProcess] = useState({ processId: '', vendorId: '' });\n  const [draggedProcess, setDraggedProcess] = useState(null);\n\n  useEffect(() => {\n    // Fetch initial data for vendors, processes, and line item processes\n    const loadInitialData = async () => {\n      try {\n        const encodedLineItemId = encodeURIComponent(lineItem.lineItemId); // Encode lineItemId\n        console.log('editpopup: Encoded lineItemId:', encodedLineItemId);\n\n        // Fetch vendors\n        const vendorData = await fetchVendors();\n        console.log('editpopup: Fetched vendors:', vendorData);\n        setVendors(vendorData);\n\n        // Fetch processes\n        const processData = await fetchProcesses();\n        console.log('editpopup: Fetched processes:', processData);\n        setProcesses(processData);\n\n        // Fetch line item processes\n        const lineItemProcessData = await fetchLineItemProcesses(encodedLineItemId);\n        console.log('editpopup: Fetched line item processes:', lineItemProcessData);\n        setLineItemProcesses(\n          lineItemProcessData.map((process, index) => ({\n            ...process,\n            _id: process._id || `temp-${Math.random()}`,\n          }))\n        );\n      } catch (err) {\n        console.error('editpopup: Error loading initial data:', err.message);\n      }\n    };\n\n    if (lineItem.lineItemId) {\n      loadInitialData(); // Fetch data if lineItemId is available\n    }\n  }, [lineItem.lineItemId]);\n\n  // Sensors for drag-and-drop\n  const sensors = useSensors(\n    useSensor(PointerSensor),\n    useSensor(KeyboardSensor, {\n      coordinateGetter: sortableKeyboardCoordinates,\n    })\n  );\n\n  // Sortable item component\n  const SortableItem = ({ id, process }) => {\n    const { attributes, listeners, setNodeRef, transform, transition } = useSortable({ \n      id: id // Ensure we're using the correct ID\n    });\n  \n    const handleRemove = async (e) => {\n      e.stopPropagation(); // Prevent drag event from triggering\n      try {\n        console.log('Removing process with ID:', id);\n        await deleteLineItemProcess(lineItem.lineItemId, id); // Pass both IDs\n        setLineItemProcesses((prev) => \n          prev.filter((item) => item._id !== id)\n        );\n      } catch (err) {\n        console.error('Error removing process:', err);\n      }\n    };\n  \n    const style = {\n      transform: CSS.Transform.toString(transform),\n      transition,\n      padding: '10px',\n      margin: '5px 0',\n      background: '#f8f8f8',\n      border: '1px solid #ddd',\n      borderRadius: '4px',\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n    };\n  \n    return (\n      <div ref={setNodeRef} style={style} {...attributes} {...listeners}>\n        <span>\n          Sequence: {process.sequence}, \n          Process: {process.processId}, \n          Vendor: {process.vendorId}\n        </span>\n        <button\n          onClick={handleRemove}\n          style={{\n            marginLeft: '10px',\n            color: 'red',\n            border: 'none',\n            background: 'none',\n            cursor: 'pointer',\n          }}\n        >\n          Remove\n        </button>\n      </div>\n    );\n  };\n  \n\n  const handleDragEnd = (event) => {\n    const { active, over } = event;\n  \n    // Ensure both active and over are defined\n    if (!active || !over) {\n      console.warn('Drag event missing active or over:', { active, over });\n      return;\n    }\n  \n    // Check if active and over have valid IDs\n    if (!active.id || !over.id) {\n      console.warn('Active or Over missing ID:', { active, over });\n      return;\n    }\n  \n    if (active.id !== over.id) {\n      setLineItemProcesses((items) => {\n        const oldIndex = items.findIndex((item) => item._id === active.id);\n        const newIndex = items.findIndex((item) => item._id === over.id);\n  \n        if (oldIndex === -1 || newIndex === -1) {\n          console.warn('Invalid indices during drag-and-drop:', { oldIndex, newIndex });\n          return items;\n        }\n  \n        const updatedItems = arrayMove(items, oldIndex, newIndex);\n  \n        // Update sequence numbers after reordering\n        return updatedItems.map((item, index) => ({\n          ...item,\n          sequence: index + 1,\n        }));\n      });\n    }\n  };\n  \n\n  const handleAddProcess = async () => {\n    if (newProcess.processId && newProcess.vendorId) {\n      const newEntry = {\n        lineItemId: lineItem.lineItemId, // Pass the lineItemId for association\n        processId: newProcess.processId,\n        vendorId: newProcess.vendorId,\n        sequence: lineItemProcesses.length + 1,\n      };\n      console.log('editpopup: New process to add:', newEntry);\n  \n      try {\n        await createLineItemProcess(newEntry); // Save to backend\n        console.log('editpopup: Added new process');\n  \n        // Refetch processes to ensure data is consistent\n        const updatedProcesses = await fetchLineItemProcesses(encodeURIComponent(lineItem.lineItemId));\n        setLineItemProcesses(\n          updatedProcesses.map((process, index) => ({\n            ...process,\n            _id: process._id || `process-${index}`,\n          }))\n        );\n        setNewProcess({ processId: '', vendorId: '' }); // Reset the input fields\n      } catch (err) {\n        console.error('editpopup: Error adding new process:', err.message);\n      }\n    }\n  };\n  \n\n  const handleSave = async () => {\n    try {\n      const encodedLineItemId = encodeURIComponent(lineItem.lineItemId); // Encode lineItemId\n      console.log(`editpopup: Encoded lineItemId for save: ${encodedLineItemId}`);\n  \n      // Save reordered processes to backend\n      const reorderedProcessesPayload = lineItemProcesses.map((process) => ({\n        lineItemProcessId: process._id, // Ensure this matches the backend field\n        sequence: process.sequence,\n      }));\n      await reorderLineItemProcesses(encodedLineItemId, reorderedProcessesPayload);\n      \n      console.log('editpopup: Saved reordered processes:', lineItemProcesses);\n  \n      // Refetch updated processes to ensure the latest data is shown\n      const updatedProcesses = await fetchLineItemProcesses(encodedLineItemId);\n      setLineItemProcesses(\n        updatedProcesses.map((process, index) => ({\n          ...process,\n          _id: process._id || `process-${index}`,\n        }))\n      );\n  \n      const processIds = updatedProcesses.map((item) => item.processId);\n      const vendorIds = updatedProcesses.map((item) => item.vendorId);\n  \n      console.log('Saving with:', { processIds, vendorIds, lineItemProcesses });\n      onSave({ ...lineItem, processIds, vendorIds, lineItemProcesses: updatedProcesses });\n    } catch (err) {\n      console.error('editpopup: Error saving processes:', err.message);\n    }\n  };\n  \n\n  return (\n    <div className=\"popup\">\n      <div className=\"popup-content\">\n        <h2>Edit Line Item</h2>\n\n        <DndContext\n          sensors={sensors}\n          collisionDetection={closestCenter}\n          onDragEnd={handleDragEnd}\n        >\n<SortableContext \n  items={lineItemProcesses.map(process => process._id)}\n  strategy={verticalListSortingStrategy}\n>\n  {lineItemProcesses.map((process) => (\n    <SortableItem \n      key={process._id}\n      id={process._id}\n      process={process}\n    />\n  ))}\n</SortableContext>\n\n\n        </DndContext>\n\n        <div style={{ marginTop: '20px' }}>\n          <h3>Add New Process</h3>\n          <select\n            value={newProcess.processId}\n            onChange={(e) => setNewProcess((prev) => ({ ...prev, processId: e.target.value }))}\n            style={{ marginRight: '10px' }}\n          >\n            <option value=\"\">Select Process</option>\n            {processes.map((process) => (\n              <option key={process.processId} value={process.processId}>\n                {process.processId}\n              </option>\n            ))}\n          </select>\n          <select\n            value={newProcess.vendorId}\n            onChange={(e) => setNewProcess((prev) => ({ ...prev, vendorId: e.target.value }))}\n            style={{ marginRight: '10px' }}\n          >\n            <option value=\"\">Select Vendor</option>\n            {vendors.map((vendor) => (\n              <option key={vendor.vendorId} value={vendor.vendorId}>\n                {vendor.vendorId}\n              </option>\n            ))}\n          </select>\n          <button onClick={handleAddProcess} style={{ padding: '5px 10px', background: 'blue', color: 'white' }}>\n            Add\n          </button>\n        </div>\n\n        <div style={{ marginTop: '20px' }}>\n          <button onClick={handleSave} style={{ padding: '5px 10px', background: 'green', color: 'white' }}>\n            Save\n          </button>\n          <button onClick={onClose} style={{ padding: '5px 10px', background: 'red', color: 'white' }}>\n            Cancel\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EditPopup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}