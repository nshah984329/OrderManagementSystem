{"ast":null,"code":"import _objectSpread from\"/Users/nshah/GPT Project/order-management-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import{createShape}from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CreateShape=()=>{const[shape,setShape]=useState({shapeId:''});const[message,setMessage]=useState('');const[error,setError]=useState('');// To track error messages\nconst handleChange=e=>{const{name,value}=e.target;setShape(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));};const handleSubmit=async e=>{e.preventDefault();setMessage('');// Reset messages\nsetError('');try{await createShape(shape);setMessage('Shape created successfully!');setShape({shapeId:''});}catch(err){if(err.response&&err.response.status===400){// Check for duplicate error message from the backend\nsetError(err.response.data.message||'Failed to create shape due to duplicate ID.');}else{setError('An unexpected error occurred. Please try again.');}}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Create Shape\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"shapeId\",placeholder:\"Shape ID\",value:shape.shapeId,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Create Shape\"})]}),message&&/*#__PURE__*/_jsx(\"p\",{style:{color:'green'},children:message}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error})]});};export default CreateShape;","map":{"version":3,"names":["React","useState","createShape","jsx","_jsx","jsxs","_jsxs","CreateShape","shape","setShape","shapeId","message","setMessage","error","setError","handleChange","e","name","value","target","prev","_objectSpread","handleSubmit","preventDefault","err","response","status","data","children","onSubmit","type","placeholder","onChange","required","style","color"],"sources":["/Users/nshah/GPT Project/order-management-frontend/src/pages/CreateShape.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { createShape } from '../services/api';\n\nconst CreateShape = () => {\n  const [shape, setShape] = useState({ shapeId: '' });\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState(''); // To track error messages\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setShape((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setMessage(''); // Reset messages\n    setError('');\n\n    try {\n      await createShape(shape);\n      setMessage('Shape created successfully!');\n      setShape({ shapeId: '' });\n    } catch (err) {\n      if (err.response && err.response.status === 400) {\n        // Check for duplicate error message from the backend\n        setError(err.response.data.message || 'Failed to create shape due to duplicate ID.');\n      } else {\n        setError('An unexpected error occurred. Please try again.');\n      }\n    }\n  };\n\n  return (\n    <div>\n      <h1>Create Shape</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"shapeId\"\n          placeholder=\"Shape ID\"\n          value={shape.shapeId}\n          onChange={handleChange}\n          required\n        />\n        <button type=\"submit\">Create Shape</button>\n      </form>\n      {message && <p style={{ color: 'green' }}>{message}</p>}\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n    </div>\n  );\n};\n\nexport default CreateShape;\n"],"mappings":"uIAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE9C,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGR,QAAQ,CAAC,CAAES,OAAO,CAAE,EAAG,CAAC,CAAC,CACnD,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACY,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAAE;AAExC,KAAM,CAAAc,YAAY,CAAIC,CAAC,EAAK,CAC1B,KAAM,CAAEC,IAAI,CAAEC,KAAM,CAAC,CAAGF,CAAC,CAACG,MAAM,CAChCV,QAAQ,CAAEW,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAAWD,IAAI,MAAE,CAACH,IAAI,EAAGC,KAAK,EAAG,CAAC,CAClD,CAAC,CAED,KAAM,CAAAI,YAAY,CAAG,KAAO,CAAAN,CAAC,EAAK,CAChCA,CAAC,CAACO,cAAc,CAAC,CAAC,CAClBX,UAAU,CAAC,EAAE,CAAC,CAAE;AAChBE,QAAQ,CAAC,EAAE,CAAC,CAEZ,GAAI,CACF,KAAM,CAAAZ,WAAW,CAACM,KAAK,CAAC,CACxBI,UAAU,CAAC,6BAA6B,CAAC,CACzCH,QAAQ,CAAC,CAAEC,OAAO,CAAE,EAAG,CAAC,CAAC,CAC3B,CAAE,MAAOc,GAAG,CAAE,CACZ,GAAIA,GAAG,CAACC,QAAQ,EAAID,GAAG,CAACC,QAAQ,CAACC,MAAM,GAAK,GAAG,CAAE,CAC/C;AACAZ,QAAQ,CAACU,GAAG,CAACC,QAAQ,CAACE,IAAI,CAAChB,OAAO,EAAI,6CAA6C,CAAC,CACtF,CAAC,IAAM,CACLG,QAAQ,CAAC,iDAAiD,CAAC,CAC7D,CACF,CACF,CAAC,CAED,mBACER,KAAA,QAAAsB,QAAA,eACExB,IAAA,OAAAwB,QAAA,CAAI,cAAY,CAAI,CAAC,cACrBtB,KAAA,SAAMuB,QAAQ,CAAEP,YAAa,CAAAM,QAAA,eAC3BxB,IAAA,UACE0B,IAAI,CAAC,MAAM,CACXb,IAAI,CAAC,SAAS,CACdc,WAAW,CAAC,UAAU,CACtBb,KAAK,CAAEV,KAAK,CAACE,OAAQ,CACrBsB,QAAQ,CAAEjB,YAAa,CACvBkB,QAAQ,MACT,CAAC,cACF7B,IAAA,WAAQ0B,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,cAAY,CAAQ,CAAC,EACvC,CAAC,CACNjB,OAAO,eAAIP,IAAA,MAAG8B,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAQ,CAAE,CAAAP,QAAA,CAAEjB,OAAO,CAAI,CAAC,CACtDE,KAAK,eAAIT,IAAA,MAAG8B,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAM,CAAE,CAAAP,QAAA,CAAEf,KAAK,CAAI,CAAC,EAC9C,CAAC,CAEV,CAAC,CAED,cAAe,CAAAN,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}