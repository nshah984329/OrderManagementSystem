{"ast":null,"code":"var _jsxFileName = \"/Users/nshah/GPT Project/order-management-frontend/src/pages/EditPopup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchVendors, fetchProcesses, fetchLineItemProcesses, reorderLineItemProcesses } from '../services/api';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPopup = ({\n  lineItem,\n  onClose,\n  onSave\n}) => {\n  _s();\n  const [lineItemProcesses, setLineItemProcesses] = useState([]); // Line item processes\n  const [vendors, setVendors] = useState([]); // Vendor list\n  const [processes, setProcesses] = useState([]); // Process list\n  const [message, setMessage] = useState('');\n\n  // Fetch line item processes on load\n  useEffect(() => {\n    const loadLineItemProcesses = async () => {\n      try {\n        const data = await fetchLineItemProcesses(lineItem.lineItemId);\n        setLineItemProcesses(data);\n      } catch (err) {\n        console.error('Error fetching line item processes:', err.message);\n      }\n    };\n    loadLineItemProcesses();\n  }, [lineItem.lineItemId]);\n\n  // Fetch vendors\n  useEffect(() => {\n    const loadVendors = async () => {\n      try {\n        const data = await fetchVendors();\n        setVendors(data);\n      } catch (err) {\n        console.error('Error fetching vendors:', err.message);\n      }\n    };\n    loadVendors();\n  }, []);\n\n  // Fetch processes\n  useEffect(() => {\n    const loadProcesses = async () => {\n      try {\n        const data = await fetchProcesses();\n        setProcesses(data);\n      } catch (err) {\n        console.error('Error fetching processes:', err.message);\n      }\n    };\n    loadProcesses();\n  }, []);\n\n  // Handle drag-and-drop reordering\n  const handleDragEnd = async result => {\n    if (!result.destination) return;\n    const items = Array.from(lineItemProcesses);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    // Update sequence based on new order\n    const reorderedProcesses = items.map((item, index) => ({\n      ...item,\n      sequence: index + 1\n    }));\n    setLineItemProcesses(reorderedProcesses);\n    try {\n      await reorderLineItemProcesses(lineItem.lineItemId, reorderedProcesses);\n      setMessage('Sequence updated successfully!');\n    } catch (err) {\n      console.error('Error updating sequence:', err.message);\n      setMessage('Failed to update sequence.');\n    }\n  };\n\n  // Save the changes\n  const handleSave = () => {\n    onSave(lineItemProcesses);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Line Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: handleDragEnd,\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"processList\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            children: [lineItemProcesses.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: item._id,\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Sequence: \", item.sequence, \" | Process: \", item.processId, \" | Vendor: \", item.vendorId]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 23\n              }, this)\n            }, item._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(EditPopup, \"IZoTmSiqowPgq8JOhOABKE+Cts8=\");\n_c = EditPopup;\nexport default EditPopup;\nvar _c;\n$RefreshReg$(_c, \"EditPopup\");","map":{"version":3,"names":["React","useState","useEffect","fetchVendors","fetchProcesses","fetchLineItemProcesses","reorderLineItemProcesses","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","EditPopup","lineItem","onClose","onSave","_s","lineItemProcesses","setLineItemProcesses","vendors","setVendors","processes","setProcesses","message","setMessage","loadLineItemProcesses","data","lineItemId","err","console","error","loadVendors","loadProcesses","handleDragEnd","result","destination","items","Array","from","reorderedItem","splice","source","index","reorderedProcesses","map","item","sequence","handleSave","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDragEnd","droppableId","provided","droppableProps","ref","innerRef","draggableId","_id","draggableProps","dragHandleProps","processId","vendorId","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/nshah/GPT Project/order-management-frontend/src/pages/EditPopup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchVendors, fetchProcesses, fetchLineItemProcesses, reorderLineItemProcesses } from '../services/api';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst EditPopup = ({ lineItem, onClose, onSave }) => {\n  const [lineItemProcesses, setLineItemProcesses] = useState([]); // Line item processes\n  const [vendors, setVendors] = useState([]); // Vendor list\n  const [processes, setProcesses] = useState([]); // Process list\n  const [message, setMessage] = useState('');\n\n  // Fetch line item processes on load\n  useEffect(() => {\n    const loadLineItemProcesses = async () => {\n      try {\n        const data = await fetchLineItemProcesses(lineItem.lineItemId);\n        setLineItemProcesses(data);\n      } catch (err) {\n        console.error('Error fetching line item processes:', err.message);\n      }\n    };\n    loadLineItemProcesses();\n  }, [lineItem.lineItemId]);\n\n  // Fetch vendors\n  useEffect(() => {\n    const loadVendors = async () => {\n      try {\n        const data = await fetchVendors();\n        setVendors(data);\n      } catch (err) {\n        console.error('Error fetching vendors:', err.message);\n      }\n    };\n    loadVendors();\n  }, []);\n\n  // Fetch processes\n  useEffect(() => {\n    const loadProcesses = async () => {\n      try {\n        const data = await fetchProcesses();\n        setProcesses(data);\n      } catch (err) {\n        console.error('Error fetching processes:', err.message);\n      }\n    };\n    loadProcesses();\n  }, []);\n\n  // Handle drag-and-drop reordering\n  const handleDragEnd = async (result) => {\n    if (!result.destination) return;\n\n    const items = Array.from(lineItemProcesses);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    // Update sequence based on new order\n    const reorderedProcesses = items.map((item, index) => ({\n      ...item,\n      sequence: index + 1,\n    }));\n\n    setLineItemProcesses(reorderedProcesses);\n\n    try {\n      await reorderLineItemProcesses(lineItem.lineItemId, reorderedProcesses);\n      setMessage('Sequence updated successfully!');\n    } catch (err) {\n      console.error('Error updating sequence:', err.message);\n      setMessage('Failed to update sequence.');\n    }\n  };\n\n  // Save the changes\n  const handleSave = () => {\n    onSave(lineItemProcesses);\n  };\n\n  return (\n    <div className=\"popup\">\n      <div className=\"popup-content\">\n        <h2>Edit Line Item</h2>\n\n        {/* Drag-and-Drop List */}\n        <DragDropContext onDragEnd={handleDragEnd}>\n          <Droppable droppableId=\"processList\">\n            {(provided) => (\n              <ul {...provided.droppableProps} ref={provided.innerRef}>\n                {lineItemProcesses.map((item, index) => (\n                  <Draggable key={item._id} draggableId={item._id} index={index}>\n                    {(provided) => (\n                      <li\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <p>\n                          Sequence: {item.sequence} | Process: {item.processId} | Vendor: {item.vendorId}\n                        </p>\n                      </li>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </ul>\n            )}\n          </Droppable>\n        </DragDropContext>\n\n        {/* Save and Cancel Buttons */}\n        <button onClick={handleSave}>Save</button>\n        <button onClick={onClose}>Cancel</button>\n      </div>\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default EditPopup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}