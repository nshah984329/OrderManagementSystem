{"ast":null,"code":"var _jsxFileName = \"/Users/nshah/GPT Project/order-management-frontend/src/pages/CreateGrade.js\",\n  _s = $RefreshSig$();\n// File: src/pages/CreateGrade.js\nimport React, { useState } from 'react';\nimport { createGrade } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateGrade = () => {\n  _s();\n  const [grade, setGrade] = useState({\n    grade: '',\n    density: '',\n    chemicalComposition: ''\n  });\n  const [message, setMessage] = useState('');\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setGrade(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await createGrade(grade);\n      setMessage('Grade created successfully!');\n      setGrade({\n        grade: '',\n        density: '',\n        chemicalComposition: ''\n      });\n    } catch (err) {\n      setMessage('Failed to create grade.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Grade\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"grade\",\n        placeholder: \"Grade\",\n        value: grade.grade,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"density\",\n        placeholder: \"Density\",\n        value: grade.density,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"chemicalComposition\",\n        placeholder: \"Chemical Composition\",\n        value: grade.chemicalComposition,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Grade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateGrade, \"AnL0gTEpFcJhSdG+ix6TUAhW6JQ=\");\n_c = CreateGrade;\nexport default CreateGrade;\nvar _c;\n$RefreshReg$(_c, \"CreateGrade\");","map":{"version":3,"names":["React","useState","createGrade","jsxDEV","_jsxDEV","CreateGrade","_s","grade","setGrade","density","chemicalComposition","message","setMessage","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","err","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["/Users/nshah/GPT Project/order-management-frontend/src/pages/CreateGrade.js"],"sourcesContent":["// File: src/pages/CreateGrade.js\nimport React, { useState } from 'react';\nimport { createGrade } from '../services/api';\n\nconst CreateGrade = () => {\n  const [grade, setGrade] = useState({ grade: '', density: '', chemicalComposition: '' });\n  const [message, setMessage] = useState('');\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setGrade((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await createGrade(grade);\n      setMessage('Grade created successfully!');\n      setGrade({ grade: '', density: '', chemicalComposition: '' });\n    } catch (err) {\n      setMessage('Failed to create grade.');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Create Grade</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"grade\"\n          placeholder=\"Grade\"\n          value={grade.grade}\n          onChange={handleChange}\n          required\n        />\n        <input\n          type=\"number\"\n          name=\"density\"\n          placeholder=\"Density\"\n          value={grade.density}\n          onChange={handleChange}\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"chemicalComposition\"\n          placeholder=\"Chemical Composition\"\n          value={grade.chemicalComposition}\n          onChange={handleChange}\n        />\n        <button type=\"submit\">Create Grade</button>\n      </form>\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default CreateGrade;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC;IAAEM,KAAK,EAAE,EAAE;IAAEE,OAAO,EAAE,EAAE;IAAEC,mBAAmB,EAAE;EAAG,CAAC,CAAC;EACvF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMY,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCT,QAAQ,CAAEU,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACH,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;EAClD,CAAC;EAED,MAAMG,YAAY,GAAG,MAAOL,CAAC,IAAK;IAChCA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMlB,WAAW,CAACK,KAAK,CAAC;MACxBK,UAAU,CAAC,6BAA6B,CAAC;MACzCJ,QAAQ,CAAC;QAAED,KAAK,EAAE,EAAE;QAAEE,OAAO,EAAE,EAAE;QAAEC,mBAAmB,EAAE;MAAG,CAAC,CAAC;IAC/D,CAAC,CAAC,OAAOW,GAAG,EAAE;MACZT,UAAU,CAAC,yBAAyB,CAAC;IACvC;EACF,CAAC;EAED,oBACER,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBtB,OAAA;MAAMuB,QAAQ,EAAER,YAAa;MAAAG,QAAA,gBAC3BlB,OAAA;QACEwB,IAAI,EAAC,MAAM;QACXb,IAAI,EAAC,OAAO;QACZc,WAAW,EAAC,OAAO;QACnBb,KAAK,EAAET,KAAK,CAACA,KAAM;QACnBuB,QAAQ,EAAEjB,YAAa;QACvBkB,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFtB,OAAA;QACEwB,IAAI,EAAC,QAAQ;QACbb,IAAI,EAAC,SAAS;QACdc,WAAW,EAAC,SAAS;QACrBb,KAAK,EAAET,KAAK,CAACE,OAAQ;QACrBqB,QAAQ,EAAEjB,YAAa;QACvBkB,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFtB,OAAA;QACEwB,IAAI,EAAC,MAAM;QACXb,IAAI,EAAC,qBAAqB;QAC1Bc,WAAW,EAAC,sBAAsB;QAClCb,KAAK,EAAET,KAAK,CAACG,mBAAoB;QACjCoB,QAAQ,EAAEjB;MAAa;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACFtB,OAAA;QAAQwB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,EACNf,OAAO,iBAAIP,OAAA;MAAAkB,QAAA,EAAIX;IAAO;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAACpB,EAAA,CApDID,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AAsDjB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}